{
    "openapi": "3.0.0",
    "info": {
        "title": "Orange Business Service Notification API",
        "version": "1.0.1",
        "contact": {
            "name": "Philippe VALETTE",
            "url": "http://developer.orange.com",
            "email": "philippe.valette@orange.com"
        },
        "description": "# Overview\n\n\nThe Notification API proposes a [Webhooks](https://en.wikipedia.org/wiki/Webhook) a mechanism, for applications to receive real-time information when an item in Orange Business Services API is created or updated. This mechanism avoid to put in place none efficient polling scripts.\n\nThe principle is that a subcription is required for each event in order to activate the notification. For this subcription, a callback url must be provided and also the type of authentication methods. The callback URL (or an API) must be accessible on Internet or in your intranet if you have the option BVPN Gallery.\nOnce the subscription is completed, Orange's servers will sent an HTTP POST based on subcribed events. \n\nObviously, it is possible to notify several applications for the same event.\n\nThis Webhook API allows also to customize the body of the event in order to use an API protected by Basic Authentication or OAuth 2.0\n\n\n| **API**               | **Description**                          | **Offer API**                   |\n|-----------------------|------------------------------------------|---------------------------------|\n| **Core Information**  |                                          |                                 |\n| **Incident**          |                                          |                                 |\n| **Network**           |                                          |                                 |\n| **Ordering**          |                                          |                                 |\n| **Mobile**            |                                          |                                 |\n\n\n\nOrange Business Services provides 2 types of Webhook\n- Standard\n- Customized\n\n\n>Webhook events can be sent more than once and the delivery is not guaranteed to be in order. To defend against this behavior a `timestamp`  in included in the body so for the same event on the same object, the state can be managed on the client side.\n\nThis documentation explains 'how to implement a Webhook notification with Orange Business Services API'. \n\nTo implement Webhook notificaton, the API 'Webhook API' must be subcribed in Orange Developer Portal.\n\n\n\n# What's a Webhook Notification\n\nWebhooks are one of a few ways web applications can communicate with each other.\n webhooks are a way for apps to communicate between them automatically.\nIt allows you to send real-time data from one application to another whenever a given event occurs.\n\nWebhooks are user-defined HTTP callbacks. They are triggered by some event in a web application and can facilitate integrating different applications or third-party APIs, like Twilio.\n\n\n### How does a webhook operate?\n\n\nYou can register a webhook by registering the URL to notify and events that you need a notification. This first step is usually done via Webhook API. To secure the relationship an authentication (Basic Authentication, OAuth 2.0...) mechanism can be added.\n\nThe route created holds the logic to be executed once events occur.\n\nThis way, a system doesn't have to know the nature of what needs to be executed, it only needs to keep track of the routes to notify.\n\n\n<img title=\"a title\" alt=\"Alt text\" src=\"schama.png\">\n\n\nIt's really powerful since everything remains decoupled. System B, receiving the notification through the chosen URL, not only knows an event occurred on another system, but it can also react to it.\n\nThe route holding the logic has to be accessible through an HTTP POST request.\n\nThe POST request is used in order to include data via the POST body. It's a  JSON object **(see the event format - todo)**.\n\n\n## Webhook API\n\nOrange Business Services Provides an API for register Webhook on several events (Production & Sandbox).\n\nThe API allows to \n- list all webhook registrations\n- Get the details of the\n- Register a new Webhook\n- Update the registration of a Webhook\n- Suspend the registration of a Webhook\n\nAll these methods are described in the Swagger.\n\nThe API is accessible on the Orange Developer Portal **Add the link - todo**\n\n\n## Webhook Registration\n\nTo register to an avent or several events, a POST method with a body is required.\n\nthe body contains\n- Common information such the name, status etc...\n- List of events to register\n- Callback information with the callback URL, authentication, headers, query parameters and transformation rules\n\n\n## Common Information\n\n\n```\n{\n   \n  \"name\": \"My First Basic Rule\",\n  \"description\": \"This first rule allows to receive notifications on the creation of a new incident.\",\n  \"mode\": \"ALL\",\n  \"isActive\": true,\n  \"events\": [\n    {\n      \"id\": \"b2b:incident:new\" \n    }\n  ],\n  \"callback\": {\n    \"url\": \"https://obs-test.requestcatcher.com/\",\n    \"method\": \"POST\",\n    \"headers\": {\n        \"version\": \"1\"\n    },\n    \"query\": {\n         \n    },\n    \"authentication\": {\n      \"type\": \"BASIC_AUTHENTICATION\",\n      \"clientId\": \"user1\",\n      \"clientSecret\": \"123456789\"\n    \n    },\n    \"maxRate\": 5\n  }\n}\n\n```\n\n\n## Callback Information\n\nThis section allows to specify all parameters required to send the notification.\n\nThe format is \n\n ```\n{\n  . . .\n  \"callback\": {\n    \"url\": \"https://obs-test.requestcatcher.com\",\n    \"method\": \"POST\",\n    \"headers\": {\n        \"key\": \"ABCDEG\"\n    },\n    \"query\": {\n        \"version\": \"1\"\n    },\n    . . .\n  }\n  . . .\n}\n\n```\n\nThe _method_ is only POST, other methods will be introduced in next versions of the Webhook API.\n\nThe _header_ section allows to add static information in the header.\n\nThe _query_ section allows to add statix information in Query parameters. \n\nThe example will not the following CURL call\n\n```\n    POST https://obs-test.requestcatcher.com?version=1\n    key: \"ABCDEG\"\n    {\n        \"id\"\n    }\n\n```\n\n\n\n\n\n## Authentication\n\nThe POST method can be public (no recommended) but also private in order to secure the exchange and to be sure that the caller is Orange Business Service system.\nThe choice of the authentication is made during the registration phase.\n\n\n### No Authentication\n\nThe event can be trigged without any Authentication. The format of the registration will be\n\n```\n\n{\n    \"name\": \"My First Customized Rule\",\n    . . .\n    \"callback\": {\n     \n    . . .\n\n        \"authentication\": {\n            \"type\": \"NO_AUTHENTICATION\" \n        },\n    . . .\n}\n```\n\n### Basic Authentication\n\nThe event can be trigged without any Authentication. The format of the registration will be\n\n```\n{\n    \"name\": \"My First Customized Rule\",\n    . . .\n    \"callback\": {\n     \n    . . .\n\n        \"authentication\": {\n            \"type\": \"BASIC_AUTHENTICATION\",\n            \"clientId\": \"user1\",\n            \"clientSecret\": \"123456789\"\n        },\n    . . .\n}\n```\n\n\n\n### OAuth Authentication\n\n\n```\n{\n    \"name\": \"My First Customized Rule\",\n    . . .\n    \"callback\": {\n     \n    . . .\n\n        \"authentication\": {\n            \"type\": \"OAUTH_AUTHENTICATION\",\n            \"tokenUrl\": null,\n            \"refreshTokenUrl\": null,\n            \"grantType\": null,\n            \"clientAuthentication\": null,\n            \"requestTokenPayloadType\": null,\n            \"tokenHeaderName\": null,\n            \"tokenType\": null,\n            \"clientIdName\": null,\n            \"clientSecretName\": null,\n            \"tokenResponse\": {\n                \"accessTokenPath\": null,\n                \"expiresInPath\": null,\n                \"expiresIn\": null\n            },\n            \"tokenResponseType\": null,\n            \"authAdditionalHeaders\": null\n        },\n    . . .\n}\n```\n\n\n## Body Transformation\n\nBy default, the event sent in the body has the format described **here-todo***\n\nBut in order to be adaptable to several implementation like calling an API and in collaboration with the Authentication, it is possible to specify another format. \n\n\n\n### Mapping\n\nTo achieve a transformation, we use the JSONATA **link-todo** format. \n\nExample of a transformation, we would like to have the following body\n\n```\n{\n    \"providerReference\": \"123456\",\n    \"provider\": \"Orange\",\n    \"status\": \"OK\"\n}\n```\n\nwhen Orange system sent by default\n\n```\n{\n    \"id\": \"123456\",\n    \"status\": \"OK\",\n    \"payload\":\n    {\n        \"id\": \"123456\",\n        \"state\": \"OK\"\n    }\n}\n```\nThe transformation schema must set in the be encoded in\n\n\n```\n{\n    \"providerReference\": event.payload.id,\n    \"provider\": \"Orange\",\n    \"status\": event.payload.state\n}\n``` \n\nas the transformation schema is transfered in a JSON object, it must be encoded\n \n```\n    . . .\n    \"schema\": {\n            \"body\": \"\n{\\\"providerReference\\\": event.payload.id,\\\"provider\\\": \\\"Orange\\\",\\\"status\\\": event.payload.state }\",\n            \"functions\": {}\n    },\n    . . .\n``` \n\nThe target system will received the expected format.\n\n\n\n### Functions\n\nSometime, it can be interesting to use a Javascript function. JSONATA has several native functions (see documentation **link-todo**) but allows alsoto be extended by custom function.  \nTo call a function, the format is _$namefunction_. \nIn the section schema/function, custom functions can be defined.\n\nExample of a simple mapping\n\n``` \n    . . .\n    \"schema\": {\n                \"mapStatus\": \"function(value){if (value=='OK') return 'INPROGRESS'; .... }\"\n            \"body\": \"{\\\"providerReference\\\": event.payload.id,\\\"provider\\\": \\\"Orange\\\",\\\"status\\\": $mapStatus(event.payload.state) }\",\n            \"functions\": {\n                \"mapStatus\": \"function(value){if (value=='OK') return 'INPROGRESS'; .... }\"\n            }\n    },\n    . . .\n``` \nIn this case the target system will receive\n\n\n```\n{\n    \"providerReference\": \"123456\",\n    \"provider\": \"Orange\",\n    \"status\": \"INPROGRESS\"\n}\n```\n\n## Event Object\n \nThe body sent to the remote host follows this format\n\n\n| id         | Type     | Description |\n|--------------|:-----------:|------------|\n| `id`| `string`     | Unique event identifier, which can be used to ensure<br>that events are only digested once.       |\n| `event.id`      |  `string`  | Event type.       |\n| `rule.id`      |  `string`  | Single Identifier of the rule that trigged the event.       |\n| `rule.name`      |  `string`  | Name of the rule that trigged the event.       |\n| `resource`      |  `string`  | Resource name this event has been generated for.    |\n| `href`        | `string`  | Contains the URL to  `GET` to request the entire resource.      |\n| `mode`      | `string`  | Mode of the event Full or only the resource id       |\n| `payload`      | `string` | The complete structure of the resource that has trigged the event.       |\n| `createdAt`      |  `string`  | ISO time when the event occured.     |\n\n\n\nExample:\n\n```\n {\n     \"id\": \"620d043dd7a5d4752655e723\",\n     \"event\":\n     {\n         \"id\": \"b2b:incident:update\"\n     },\n     \"rule\":\n     {\n         \"id\": \"61747d2133a086001be1f6af\",\n         \"name\": \"Notification on Incident update\"\n     },\n     \"payload\":\n     {\n         \"id\": \"123456788\",\n         . . . \n     },\n     \"createdAt\":\"2021-10-23T21:22:41Z\"\n }\n```\n\n \n\n## CallBack Host configuration\n\n\n### URL\n\n\n\n### Authentication\n\n\n\n# Customized Webhook / API calls\n\nThe Orange Business Services Webhook API provide the capability to customized the signature of the notification.\nThis feature combined with the Authentication is usefull to call Public API.\n\nThe Body transformation is based on an JSON transformation engine named JSONATA tools [https://jsonata.org/](https://jsonata.org/)\n\nSo for each type of event, a transformation rule must be  must be specified in the attribute `schema` present in the `callback` section.  \nSee the [Swagger](http://)\n\nThe attribute `schema` is an object composed of 2 attributes:\n\n- `body`: Contains the the new transformation schema encoded (due to JSON) with escaped characters.\n- `functions`: Contains a list of Javascript functions that can be call from the transformation schema, this is usefull for complex transformation or  mapping, even if JSONATA allows to define embedded functions.\n\n\n## Transformation of the body\n\nThe transformation schema must be defined in JSONATA with escapêd characters. \n\nTo access data of the event, the object `event` is available to access attribute of the event.\nAll information of the item that is new, changed are avaialble under `payload`attribute.\n\nFor example, to access the status of an incident, the syntax will be `event.payload.status`\n\nThe following transformation schema\n\n```json\n{\n    . . .\n    \"callback\":\n    {\n        \"schema\":\n        {\n            \"body\": \"{\\\"id\\\": event.payload.status, \\\"status\\\": event.payload.status}\",\n        }\n    }\n\n    . . .\n}\n \n```\n\nWith the following standard event:\n\n```json\n{\n    \"id\": \"10-xxxxxxxx\",\n    . . .\n    \"payload\":\n    {\n         \"id\": \"10-xxxxxxx\",\n         . . .\n         \"status\":\"IN_PROGRESS\",\n         . . .\n    }\n    . . .\n}\n\n```\n\nwill be transformed in more simple event\n\n```json\n{\n    \"id\": \"10-xxxxxxxx\",\n    \"status\":\"IN_PROGRESS\"\n}\n\n```\n\n\nWith this mechanism, the Webhook API can be adapted for all type of REST API.\n\n\n## Complex transformation with JS functions\n\nFrom the schema you can call Javascript functions for complex transformations.\n\nThe function must be defined in the `functions` attribute that it is an object where keys are the name of the function. \n\nTo avoid unexpected response of the function, all errors must be catched or prevented.\n\nTo work, the function must return a value and several parameters can be indicated.\n\n\nIn tis example, 2 functions are defined\n- one for multiple by twice a value\n- another one for doing a simple mapping ('P1' => 1, 'P2' => 2, all other values will be null) \n\n\n```json\n{\n    . . .\n    \"callback\":\n    {\n        . . .\n        \"functions\":{\n            \"multiplyByTwo\" : \"function(a) {  return a*2 }\",\n            \"mapPriorities\" : \"function (a) { switch(a) { case 'P1': return 1; case P2: return 2}; return null;}\"\n        }\n        . . .\n    }\n    . . .\n}\n\n```\n\nin these exemple, these functions can be call from the schema. In JSONATA, the function must be called by is name with a $ in prefix.\n\nExample of a transformation schema:\n```json\n\n{\n    \"id\": event.payload.id,\n    \"duration\": $multiplyByTwo(event.payload.duration),\n    \"priority\": $mapPriorities(event.payload.priority)\n}\n```\n\nThe complete definition is \n\n```json\n{\n    . . .\n    \"callback\":\n    {\n        . . .\n        \"schema\":\n        {\n            \"body\": \"{\\\"id\\\": event.payload.id, \\\"duration\\\": $multiplyByTwo(event.payload.duration), \\\"priority\\\": $mapPriorities(event.payload.priority)\",\n            \"functions\":{\n                \"multiplyByTwo\" : \"function(a) {  return a*2 }\",\n                \"mapPriorities\" : \"function (a) { switch(a) { case 'P1': return 1; case P2: return 2}; return null;}\"\n            }\n        }\n        . . .\n    }\n    . . .\n}\n\n```\n\n\n\nSo with the following standard event,\n\n```json\n{\n    \"id\": \"10-xxxxxxxx\",\n    . . .\n    \"payload\":\n    {\n        \"id\": \"10-xxxxxxxx\",\n        . . .\n        \"duration\": 15,\n        \"priority\": \"P1\"\n        . . .\n    }\n    . . .\n}\n\n```\n\nThe remote host will be received the follwing body \n\n```json\n{\n    \"id\": \"10-xxxxxxxx\",\n    \"duration\": 30,\n    \"priority\": 1\n}\n```\n\n\nThe system is very flexible combined with Authentication.\n\n\n\n\n# A Walkthough\n\nIn this chapter, we will describe Step by Step how to implement a Webhook notification.\n\n## Target System Implementation\n\nFirst of all, we must have a system to receive notifications. To illustrate the implementation, we will use the Request Catcher (https://requestcatcher.com/)web site. The site will crate a subdomain where we can forward calls. The application allows to see all parameters of the HTTP.\n\nOn the first page of the site, you have to enter the name of the subdomain\n \n<img title=\"a title\" alt=\"Alt text\" src=\"https://raw.githubusercontent.com/obs-api/swaggers/main/swaggers/current/webhooks-v1/assets/requestcatcher-1.png\">\n\n\nIn this example, we used webhook-test, and the callback URL will be https://webhook-test.requestcatcher.com/\n\n\nOn the next page, the site is waiting calls,\n\n<img title=\"a title\" alt=\"Alt text\" src=\"https://raw.githubusercontent.com/obs-api/swaggers/main/swaggers/current/webhooks-v1/assets/requestcatcher-2.png\">\n\n\n\n don't close the window, eventw will be displayed.\n\n\n## Subcription to event\n\nThe next step is to register a notification. So must have registered to the Webhook API in the Orange Developer Portal.\n\nFor this walkthough we will use a demo account, the API Key is available here.\n\nTo register, via POSTMAN, you must send a POST method with the following Body.\n\nFor illustrating capabilities for this first test, we will use the Basic Authentication, a query parameter and a header attribute.\n\nWe will subcribe to incident events\n\nThe format of the request will be\n\n```\n{\n    \"name\": \"My First Registration\",\n    \"description\": \"A basic registration to Incident Events.\",\n    \"mode\": \"ALL\",\n    \"isActive\": true,\n    \"events\": [\n        { \n            \"id\": \"b2b:incidents:new\"\n        },\n        {\n            \"id\": \"b2b:incidents:update\"\n        }\n    ],\n    \"callback\": {\n        \"url\": \"https://webhook-test.requestcatcher.com\",\n        \"method\": \"POST\",\n        \"headers\": {\n            \"version\": \"1\"\n        },\n        \"query\": {\n            \"provider\": \"ORANGE\"\n        },\n        \"authentication\": {\n            \"type\": \"BASIC_AUTHENTICATION\",\n            \"clientId\": \"user1\",\n            \"clientSecret\": \"123456789\"\n        },\n        \"schema\": {} \n    }\n}\n\n```\n\nThe Postman collection can be download here **TODO**\n\n\n\n<br><br>\n\n## Test with Espace Client Entreprise\n<br>\n\nFor generating an incident, we will use the Developer Portal (http://espaceclient.orange-business.com/group/ece2) and the associated demo login (demo.gcompte/Demo1234!)\n\n<img title=\"a title\" alt=\"Alt text\" src=\"https://raw.githubusercontent.com/obs-api/swaggers/main/swaggers/current/webhooks-v1/assets/requestcatcher-1.png\">\n\n\nClick on the 'Report an incident'\n\n<img title=\"a title\" alt=\"Alt text\" src=\"https://raw.githubusercontent.com/obs-api/swaggers/main/swaggers/current/webhooks-v1/assets/ece-incident-1.png\">\n\n\n\n<br><br>\nSelect the item <br>\n<img title=\"a title\" alt=\"Alt text\" src=\"https://raw.githubusercontent.com/obs-api/swaggers/main/swaggers/current/webhooks-v1/assets/ece-incident-2.png\">\n\n\n\n<br><br>\n\nFill in the form<br>\n\n<img title=\"a title\" alt=\"Alt text\" src=\"https://raw.githubusercontent.com/obs-api/swaggers/main/swaggers/current/webhooks-v1/assets/ece-incident-3.png\">\n\n\n\n## Result in Request Catcher\n\n\n\n\n\n\n"
    },
    "servers": [{
        "url": "https://api.orange.com/webhook/b2b/preview/v1"
    }],
    "tags": [{
            "name": "Webhook Rules API",
            "description": "Webhook rules allows to subscribe to event on the following APIs: Core Information, Incident, Network, Ordering."
        },
        {
            "name": "Miscellaneous",
            "description": "Methods for having information on the API such as the version, status or for downloading the Swagger."
        }
    ],
    "paths": {
        "/webhooks": {
            "get": {
                "summary": "Find Webhooks",
                "tags": [
                    "Webhook Rules API"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Webhook"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of items matching criterias."
                            },
                            "X-Result-Count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The actual number of items returned in the response body."
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "operationId": "FindWebhooks",
                "parameters": [{
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-API-KEY",
                        "description": "The API Key required for using Orange Business Services API."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "format": "int32",
                            "default": 0
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "The index of the first Webhook rule to retrieve. Zero is the first item of the collection."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "maximum": 250,
                            "default": 250
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "The maximum number of Webhook rules to return."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "sort",
                        "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign indicates a descending order. __Example: sort=-name"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "fields",
                        "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "id",
                        "description": "Returns Webhook rules that match the exact value or advanced search formula for the Orange Single Identifier. "
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "description": " Returns Webhook rules that match the exact value or advanced search formula for the Name. "
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "events.id",
                        "description": " Returns Webhook rules that match the exact value or advanced search formula for the Event Id. "
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "authentication.type",
                        "description": " Returns Webhook rules that match the exact value or advanced search formula for the Authentication Type "
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "callback.url",
                        "description": "Returns Webhook rules that match the exact value or advanced search formula for the URL of the callback."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "callback.method",
                        "description": "Returns Webhook rules that match the exact value or advanced search formula for the method of the callback."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "in": "query",
                        "name": "createdAt",
                        "description": "Returns Webhook rules that match the exact value or advanced search formula based on the creation date of the record."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "updatedAt",
                        "description": "Returns Webhook rules that match the exact value or advanced search formula based on the last update date of the record."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "in": "query",
                        "name": "displayNulls",
                        "description": "Flag for displaying all fields even if the value is null."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "in": "query",
                        "name": "displayLinks",
                        "description": "Flag for displaying the HATEOS links of linked ressources."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "isActive",
                        "description": "Returns Webhook rules that are active or not."
                    }
                ],
                "description": "This endpoint returns a Webhook rules that matching criterias defined in the Query Parameters. ",
                "security": [{
                    "Orange": [
                        "b2b:webhook",
                        "b2b:webhook:readonly"
                    ]
                }]
            },
            "parameters": [],
            "post": {
                "summary": "Add a Webhook",
                "operationId": "AddWebhook",
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "URI of the new Webhook Rule"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "schema": {
                        "type": "string"
                    },
                    "in": "header",
                    "name": "X-API-KEY",
                    "description": "The API Key required for using Orange Business Services API."
                }],
                "tags": [
                    "Webhook Rules API"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookAdd"
                            }
                        }
                    },
                    "description": "Information to send for creating a Webhook Rule."
                },
                "description": "This endpoint allows to add a new Webhook rules that will be activated in the Customer perimeter. ",
                "security": [{
                    "Orange": [
                        "b2b:webhook"
                    ]
                }]
            }
        },
        "/webhooks/{webhooksId}": {
            "parameters": [{
                "schema": {
                    "type": "string"
                },
                "name": "webhooksId",
                "description": "Single Identifier of the Webhook.",
                "in": "path",
                "required": true
            }],
            "get": {
                "summary": "Get Webhook Details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhook"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetWebhook",
                "description": "This method allows to retrieve details of a Webhook.",
                "parameters": [{
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-API-KEY",
                        "description": "The API Key required for using Orange Business Services API."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "fields",
                        "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "in": "query",
                        "name": "displayNulls",
                        "description": "Flag for displaying all fields even if the value is null."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "in": "query",
                        "name": "displayLinks",
                        "description": "Flag for displaying the HATEOS links of linked ressources."
                    }
                ],
                "security": [{
                    "Orange": [
                        "b2b:webhook",
                        "b2b:webhook:readonly"
                    ]
                }],
                "tags": [
                    "Webhook Rules API"
                ]
            },
            "patch": {
                "summary": "Modify Webhook",
                "operationId": "ModifyWebhook",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhook"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "description": "This method allows to modify the Webhook Rule.",
                "parameters": [{
                    "schema": {
                        "type": "string"
                    },
                    "in": "header",
                    "name": "X-API-KEY",
                    "description": "The API Key required for using Orange Business Services API."
                }],
                "tags": [
                    "Webhook Rules API"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookUpdate"
                            }
                        }
                    },
                    "description": "Information that can be changed"
                },
                "security": [{
                    "Orange": [
                        "b2b:webhook"
                    ]
                }]
            },
            "delete": {
                "summary": "Delete a Webhook Rules",
                "operationId": "DeleteWebhook",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "description": "The endpoint allows cancellation of an existing Webhook rule.",
                "security": [{
                    "Orange": [
                        "b2b:webhook"
                    ]
                }],
                "tags": [
                    "Webhook Rules API"
                ]
            }
        },
        "/status": {
            "get": {
                "summary": "Get API Status",
                "tags": [
                    "Miscellaneous"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Information of the Status.",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the API."
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "ok",
                                                "ko"
                                            ],
                                            "description": "Status of the API. 'ok' indicates that the API is available without problems. 'ko' indicates that the API is facing some issues."
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Version of the API in the format Major, Minor and patch number."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Information of the Status.",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the API."
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Status of the API. 'ok' indicates that the API is available without problems. 'ko' indicates that the API is facing some issues.",
                                            "enum": [
                                                "ok",
                                                "ko"
                                            ]
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Version of the API in the format Major, Minor and patch number."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "GetStatus",
                "description": "This endpoint returns the status of the API and the version number.",
                "security": [{
                    "Orange": [
                        "b2b:webhook",
                        "b2b:webhook:readonly"
                    ]
                }]
            }
        },
        "/version": {
            "get": {
                "summary": "Get API Version",
                "tags": [
                    "Miscellaneous"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Information on the version of the API.",
                                    "properties": {
                                        "version": {
                                            "$ref": "#/components/schemas/VersionStruct"
                                        },
                                        "deprecated": {
                                            "type": "boolean",
                                            "description": "Flag indicating that API is deprecated."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetVersion",
                "description": "Return the current version of the API including Major Release number, Minor Release number and Patch number.\n\nThe Major Release number is present in the URI of the API. ",
                "security": [{
                    "Orange": [
                        "b2b:webhook",
                        "b2b:webhook:readonly"
                    ]
                }]
            }
        },
        "/doc": {
            "get": {
                "summary": "Download the API Swagger",
                "tags": [
                    "Miscellaneous"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Documentation"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    }
                },
                "operationId": "DownloadSwagger",
                "security": [{
                    "Orange": [
                        "b2b:webhook",
                        "b2b:webhook:readonly"
                    ]
                }],
                "description": "This endpoint allows to download the current Swagger file of the API.\n\n "
            }
        },
        "/me": {
            "get": {
                "summary": "Get User Information",
                "tags": [
                    "Miscellaneous"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ME"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetMe",
                "description": "This endpoint provides information on the connected user.",
                "security": [{
                    "Orange": [
                        "b2b:webhook",
                        "b2b:webhook:readonly"
                    ]
                }],
                "parameters": [{
                    "schema": {
                        "type": "string"
                    },
                    "in": "header",
                    "name": "X-API-KEY",
                    "description": "The API Key required for using Orange Business Services API."
                }]
            }
        }
    },
    "components": {
        "schemas": {
            "Webhook": {
                "title": "Webhook",
                "type": "object",
                "description": "Information on the Webhook Rule.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Single Identifier of the Webhook notification."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Webhook rule."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Webhook rule."
                    },
                    "mode": {
                        "type": "string",
                        "description": "Mode of the notification. By selection 'ID_ONLY', the notification will sent only the ID and a GET is required to retrieve the item. By selecting the other option (default), the complete record is sent. For Custom response, this latest mode must be selected.",
                        "enum": [
                            "ID_ONLY",
                            "ALL"
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the Webhook rule is active or not."
                    },
                    "events": {
                        "type": "array",
                        "description": "List of events associated to the current Webhook.",
                        "items": {
                            "$ref": "#/components/schemas/WebhookEvent"
                        }
                    },
                    "callback": {
                        "$ref": "#/components/schemas/WebhookCallback"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date of the Webhook rule."
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update date of the Notification."
                    }
                }
            },
            "WebhookCallback": {
                "title": "WebhookCallback",
                "type": "object",
                "description": "Format of information require for the Callback.",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "Url of the callback."
                    },
                    "headers": {
                        "type": "object",
                        "description": "Object containing required Headers.",
                        "properties": {}
                    },
                    "query": {
                        "type": "object",
                        "description": "Object containing Query parameters.",
                        "properties": {}
                    },
                    "authentication": {
                        "$ref": "#/components/schemas/WebhookCallbackAuthentication"
                    },
                    "body": {
                        "type": "object",
                        "description": "Custom body for POST/PATCH/PUT method. If null or not present, the body will use the standard format.",
                        "properties": {
                            "functions": {
                                "description": "List of function used for the schema. Check our tutorials.",
                                "type": "object",
                                "properties": {}
                            },
                            "schema": {
                                "description": "Schema used for transforming the response.",
                                "type": "string"
                            }
                        }
                    },
                    "maxRate": {
                        "type": "integer",
                        "description": "Max Number of requests per second. *Future Use*",
                        "default": 5,
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 50
                    },
                    "method": {
                        "type": "string",
                        "description": "The HTTP method expected for the Callback.",
                        "enum": [
                            "POST",
                            "PUT",
                            "PATCH"
                        ],
                        "default": "POST"
                    }
                }
            },
            "WebhookCallbackAuthentication": {
                "title": "WebhookCallbackAuthentication",
                "type": "object",
                "description": "Information on the Authentication.",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of the authentication to use for the callback.",
                        "enum": [
                            "BASIC_AUTHENTICATION",
                            "NONE",
                            "OAUTH_2",
                            "OAUTH_2_CUSTOM1"
                        ]
                    },
                    "clientId": {
                        "type": "string",
                        "description": "login for Basic Authentication, Client Id for OAuth 2.0."
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Paswword for Basic Authentication or Client Secret for OAuth 2.0"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL for generating the OAuth 2.0 token. Ignored for Basic Authentication."
                    },
                    "refreshTokenUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "Refresh URL for re generating the OAuth Token. If empty, the refresh mechanism will use the token Url. Ignored for Basic Authentication."
                    },
                    "grantType": {
                        "type": "string",
                        "description": "Grant Type for OAUTH 2.0, Only Client Credential is supported. Ignored for Basic Authentication.",
                        "enum": [
                            "CLIENT_CREDENTIAL"
                        ],
                        "example": "CLIENT_CREDENTIAL"
                    },
                    "clientAuthentication": {
                        "type": "string",
                        "description": "Indicates how the clientId & ClientSecret is transfered. For Basic Authentication, only _AUTHORIZATION_HEADER_ is supported.",
                        "enum": [
                            "AUTHORIZATION_HEADER",
                            "CLIENT_CREDENTIAL_IN_BODY"
                        ],
                        "example": "AUTHORIZATION_HEADER"
                    }
                }
            },
            "WebhookEvent": {
                "title": "WebhookEvent",
                "description": "Information the Webhook events.",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Event Identifiers.",
                        "enum": [
                            "b2b:incident:new",
                            "b2b:incident:update",
                            "b2b:incident:delete",
                            "b2b:incident-note:new",
                            "b2b:incident-note:update",
                            "b2b:incident-note:delete",
                            "b2b:incident-freeze-period:new",
                            "b2b:incident-freeze-period:update",
                            "b2b:incident-freeze-period:delete",
                            "b2b:incident-attachement:new",
                            "b2b:incident-attachement:update",
                            "b2b:incident-attachement:delete",
                            "b2b:incident:new:sandbox",
                            "b2b:incident:update:sandbox",
                            "b2b:network-device:new",
                            "b2b:network-device:update",
                            "b2b:network-device:delete",
                            "b2b:network-access-line:new",
                            "b2b:network-access-line:update",
                            "b2b:network-access-line:delete",
                            "b2b:network-point-of-presence:new",
                            "b2b:network-point-of-presence:update",
                            "b2b:network-point-of-presence:delete",
                            "b2b:location:new",
                            "b2b:location:update",
                            "b2b:location:delete",
                            "b2b:servicePoint:new",
                            "b2b:servicePoint:update",
                            "b2b:servicePoint:delete",
                            "b2b:configurationItem:new",
                            "b2b:configurationItem:update",
                            "b2b:configurationItem:delete",
                            "b2b:change-request:new",
                            "b2b:change-request:update",
                            "b2b:change-request:delete",
                            "b2b:change-catalog-item:new",
                            "b2b:change-catalog-item:update",
                            "b2b:change-catalog-item:delete",
                            "b2b:change-note:new",
                            "b2b:change-note:update",
                            "b2b:change-note:delete",
                            "b2b:change-attachement:new",
                            "b2b:change-atachements:update",
                            "b2b:change-attachment:delete",
                            "b2b:maintenance:new",
                            "b2b:maintenance:update",
                            "b2b:maintenance:delete",
                            "b2b:mobile-line:new",
                            "b2b:mobile-line:update",
                            "b2b:mobile-line:delete",
                            "b2b:mobile-sim-card:new",
                            "b2b:mobile-sim-card:update",
                            "b2b:mobile-sim-card-delete",
                            "b2b:mobile-request-new",
                            "b2b:mobile-request:update",
                            "b2b:mobile-request:delete",
                            "b2b:order:new",
                            "b2b:order:update",
                            "b2b:order:delete",
                            "b2b:commercial-request:new",
                            "b2b:commercial-request:update",
                            "b2b:commercial-request:delete"
                        ]
                    },
                    "filters": {
                        "type": "object",
                        "description": "Filters on parameters"
                    }
                }
            },
            "WebhookAdd": {
                "title": "WebhookAdd",
                "description": "Body for updating a Webhook rule.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Webhook rule."
                    },
                    "description": {
                        "type": "string",
                        "description": "Name of the Webhook rule."
                    },
                    "mode": {
                        "type": "string",
                        "description": "Mode of the notification. By selection 'ID_ONLY', the notification will sent only the ID and a GET is required to retrieve the item. By selecting the other option (default), the complete record is sent. For Custom response, this latest mode must be selected.",
                        "enum": [
                            "ID_ONLY",
                            "ALL"
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the Webhook rule is active or not."
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookEvent"
                        }
                    },
                    "callback": {
                        "$ref": "#/components/schemas/WebhookCallback"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "isActive",
                    "events",
                    "callback"
                ]
            },
            "WebhookUpdate": {
                "title": "WebhookUpdate",
                "description": "Body for updating a Webhook rule.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Webhook rule."
                    },
                    "description": {
                        "type": "string",
                        "description": "Name of the Webhook rule."
                    },
                    "mode": {
                        "type": "string",
                        "description": "Mode of the notification. By selection 'ID_ONLY', the notification will sent only the ID and a GET is required to retrieve the item. By selecting the other option (default), the complete record is sent. For Custom response, this latest mode must be selected.",
                        "enum": [
                            "ID_ONLY",
                            "ALL"
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the Webhook rule is active or not."
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookEvent"
                        }
                    },
                    "callback": {
                        "$ref": "#/components/schemas/WebhookCallback"
                    }
                }
            },
            "Documentation": {
                "title": "Documentation",
                "type": "object",
                "description": "Swagger (OpenAPI version) of the API in JSON format"
            },
            "VersionStruct": {
                "title": "VersionStruct",
                "description": "Information on the API Version",
                "type": "object",
                "properties": {
                    "major": {
                        "type": "string",
                        "description": "Major number of the API."
                    },
                    "minor": {
                        "type": "string",
                        "description": "Minor number of the API."
                    },
                    "patch": {
                        "type": "string",
                        "description": "Patch number of the API."
                    }
                }
            },
            "Error": {
                "title": "Error",
                "type": "object",
                "description": "Information on the Error.",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "Code of the error.",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string",
                        "description": "Title of the error."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the error."
                    },
                    "infoURL": {
                        "type": "string",
                        "description": "URL for additional information on the error."
                    }
                }
            },
            "ME": {
                "title": "Me",
                "type": "object",
                "description": "Information on the connected user and the API Key.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Single Identifier of the API key."
                    },
                    "login": {
                        "type": "string",
                        "description": "Login of the associated user."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the associated user."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number of the associated user."
                    },
                    "mobile": {
                        "type": "string",
                        "description": "Mobile number of the associated user."
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the associated user."
                    },
                    "application": {
                        "type": "object",
                        "description": "Application identifier in Orange Developer Portal.",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Orange Single Identifier of the application in the Orange Developer Portal."
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the application in Orange Developer Portal."
                            }
                        }
                    },
                    "apiKey": {
                        "type": "object",
                        "description": "Token identifier associated to the API Key.",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Orange Single Identifier of the API KEY."
                            },
                            "scopes": {
                                "type": "string",
                                "description": "Scopes defined for the API Key for Machine to Machine connection, or negotiated scopes for User to Machine connection."
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date of the creation of the API Key."
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last update date of the API Key."
                            },
                            "type": {
                                "type": "string",
                                "description": "Type of the environment (Sandbox or Production).",
                                "enum": [
                                    "ACTIVE",
                                    "EXPIRED",
                                    "SUSPENDED"
                                ]
                            },
                            "expiredAt": {
                                "type": "string",
                                "description": "Date of the expiration of the API Key."
                            }
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the User Account."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date of the User Account."
                    }
                }
            },
            "Network-for-business-2_0_Error": {
                "required": [
                    "code",
                    "message"
                ],
                "description": "Information on the Error.",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Code of the error",
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "description": "Title of the error",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the error",
                        "type": "string"
                    },
                    "infoURL": {
                        "description": "URL for additional information on the error.",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "Orange": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://api.orange.com/oauth/v3/token",
                        "scopes": {
                            "b2b:webhook": "Allow to manage Webhook rules",
                            "b2b:webhook:readonly": "Access in Read only all information of Webhook rules"
                        },
                        "refreshUrl": "https://api.orange.com/oauth/v3/token"
                    }
                }
            }
        }
    }
}
