{
  "openapi": "3.0.0",
  "info": {
    "title": "Orange Business Service Webhook API",
    "version": "1.0",
    "contact": {
      "name": "Philippe VALETTE",
      "url": "http://developer.orange.com",
      "email": "philippe.valette@orange.com"
    },
    "description": "\n\n[Webhooks](https://en.wikipedia.org/wiki/Webhook) are a way for applications to receive real-time information when an item in Orange Business Services API is created or updated. This mechanism avoid to put in place none efficient polling scripts.\n\nThe principle is that a subcription is required for each event in order to activate the notification. For this subcription, a callback url must be provided and also the type of authentication (no authentication, basic authentication or OAuth 2.0). The callback URL (or an API) must be accessible on Internet or in your intranet if you have the option BVPN Gallery.\nOnce the subscription is completed, Orange's servers will sent an HTTP POST based on subcribed events. \n\nObviously,it is possible to be notified on several applications for the same event.\n\nThis Webhook API allows also to customize the body of the event in order to use an API protected by Basic Authentication or OAuth 2.0\n\n\nA step by step [tutorial](http://) will help you to put in place Webhooks.\n\n\n>Webhook events can be sent more than once and the delivery is not guaranteed to be in order. To defend against this behavior a `timestamp`  in included in the body so for the same event on the same object, the state can be managed on the client side.\n\n## Event Object\nThe list of available events is available [here](http://#). The standard format of the received payload is\n```\n {\n     \"id\": \"\",\n     \"type\":\"\",\n     \"createdAt\":\"\"\n     \"payload\":\n     {\n         \"id\": \"123456788\",\n         . . . \n\n     }\n }\n```\n\n\n\n\n"
  },
  "servers": [
    {
      "url": "https://api.orange.com/webhook/b2b/preview/v1"
    }
  ],
  "tags": [
    {
      "name": "Webhook Rules",
      "description": "Webhook rules allows to subscribe to event on the following APIs: Core Information, Incident, Network, Ordering."
    },
    {
      "name": "Miscellaneous",
      "description": "Methods for having information on the API such as the version, status or for downloading the Swagger."
    }
  ],
  "paths": {
    "/webhooks": {
      "get": {
        "summary": "Find Webhooks",
        "tags": [
          "Webhook Rules"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook"
                  }
                }
              }
            },
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "type": "integer"
                },
                "description": "The total number of items matching criterias."
              },
              "X-Result-Count": {
                "schema": {
                  "type": "integer"
                },
                "description": "The actual number of items returned in the response body."
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "FindWebhooks",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "format": "int32",
              "default": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first Webhook rule to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of Webhook rules to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign indicates a descending order. __Example: sort=-name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Returns Webhook rules that match the exact value or advanced search formula for the Orange Single Identifier. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": " Returns Webhook rules that match the exact value or advanced search formula for the Name. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "events.id",
            "description": " Returns Webhook rules that match the exact value or advanced search formula for the Event Id. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "authentication.type",
            "description": " Returns Webhook rules that match the exact value or advanced search formula for the Authentication Type "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "callback.url",
            "description": "Returns Webhook rules that match the exact value or advanced search formula for the URL of the callback."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "callback.method",
            "description": "Returns Webhook rules that match the exact value or advanced search formula for the method of the callback."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Returns Webhook rules that match the exact value or advanced search formula based on the creation date of the record."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Returns Webhook rules that match the exact value or advanced search formula based on the last update date of the record."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          }
        ],
        "description": "This endpoint returns a Webhook rules that matching criterias defined in the Query Parameters. ",
        "security": [
          {
            "Orange": [
              "b2b:webhook",
              "b2b:webhook:readonly"
            ]
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Add a Webhook",
        "operationId": "AddWebhook",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the new Webhook Rule"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          }
        ],
        "tags": [
          "Webhook Rules"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookAdd"
              }
            }
          },
          "description": "Information to send for creating a Webhook Rule."
        },
        "description": "This endpoint allows to add a new Webhook rules that will be activated in the Customer perimeter. ",
        "security": [
          {
            "Orange": [
              "b2b:webhook"
            ]
          }
        ]
      }
    },
    "/webhooks/{webhooksId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "webhooksId",
          "description": "Single Identifier of the Webhook.",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Webhook Details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "GetWebhook",
        "description": "This method allows to retrieve details of a Webhook.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          }
        ],
        "security": [
          {
            "Orange": [
              "b2b:webhook",
              "b2b:webhook:readonly"
            ]
          }
        ],
        "tags": [
          "Webhook Rules"
        ]
      },
      "patch": {
        "summary": "Modify Webhook",
        "operationId": "ModifyWebhook",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "This method allows to modify the Webhook Rule.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          }
        ],
        "tags": [
          "Webhook Rules"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          },
          "description": "Information that can be changed"
        },
        "security": [
          {
            "Orange": [
              "b2b:webhook"
            ]
          }
        ]
      },
      "delete": {
        "summary": "Delete a Webhook Rules",
        "operationId": "DeleteWebhook",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "The endpoint allows cancellation of an existing Webhook rule.",
        "security": [
          {
            "Orange": [
              "b2b:webhook"
            ]
          }
        ],
        "tags": [
          "Webhook Rules"
        ]
      }
    },
    "/status": {
      "get": {
        "summary": "Get API Status",
        "tags": [
          "Miscellaneous"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information of the Status.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the API."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "ko"
                      ],
                      "description": "Status of the API. 'ok' indicates that the API is available without problems. 'ko' indicates that the API is facing some issues."
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the API in the format Major, Minor and patch number."
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information of the Status.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the API."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the API. 'ok' indicates that the API is available without problems. 'ko' indicates that the API is facing some issues.",
                      "enum": [
                        "ok",
                        "ko"
                      ]
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the API in the format Major, Minor and patch number."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "GetStatus",
        "description": "This endpoint returns the status of the API and the version number.",
        "security": [
          {
            "Orange": [
              "b2b:webhook",
              "b2b:webhook:readonly"
            ]
          }
        ]
      }
    },
    "/version": {
      "get": {
        "summary": "Get API Version",
        "tags": [
          "Miscellaneous"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information on the version of the API.",
                  "properties": {
                    "version": {
                      "$ref": "#/components/schemas/VersionStruct"
                    },
                    "deprecated": {
                      "type": "boolean",
                      "description": "Flag indicating that API is deprecated."
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          }
        },
        "operationId": "GetVersion",
        "description": "Return the current version of the API including Major Release number, Minor Release number and Patch number.\n\nThe Major Release number is present in the URI of the API. ",
        "security": [
          {
            "Orange": [
              "b2b:webhook",
              "b2b:webhook:readonly"
            ]
          }
        ]
      }
    },
    "/doc": {
      "get": {
        "summary": "Download the API Swagger",
        "tags": [
          "Miscellaneous"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Documentation"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          }
        },
        "operationId": "DownloadSwagger",
        "security": [
          {
            "Orange": [
              "b2b:webhook",
              "b2b:webhook:readonly"
            ]
          }
        ],
        "description": "This endpoint allows to download the current Swagger file of the API.\n\n "
      }
    },
    "/me": {
      "get": {
        "summary": "Get Logged User Information",
        "tags": [
          "Miscellaneous"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ME"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network-for-business-2_0_Error"
                }
              }
            }
          }
        },
        "operationId": "GetMe",
        "description": "This endpoint provide information on the connected user.",
        "security": [
          {
            "Orange": [
              "b2b:webhook",
              "b2b:webhook:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Webhook": {
        "title": "Webhook",
        "type": "object",
        "description": "Information on the Webhook Rule.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Webhook notification."
          },
          "name": {
            "type": "string",
            "description": "Name of the Webhook rule."
          },
          "description": {
            "type": "string",
            "description": "Description of the Webhook rule."
          },
          "mode": {
            "type": "string",
            "description": "Mode of the notification. By selection 'ID_ONLY', the notification will sent only the ID and a GET is required to retrieve the item. By selecting the other option (default), the complete record is sent. For Custom response, this latest mode must be selected.",
            "enum": [
              "ID_ONLY",
              "ALL"
            ]
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag indicating if the Webhook rule is active or not."
          },
          "events": {
            "type": "array",
            "description": "List of events associated to the current Webhook.",
            "items": {
              "$ref": "#/components/schemas/WebhookEvent"
            }
          },
          "callback": {
            "$ref": "#/components/schemas/WebhookCallback"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the Webhook rule."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update date of the Notification."
          }
        }
      },
      "WebhookCallback": {
        "title": "WebhookCallback",
        "type": "object",
        "description": "Format of information require for the Callback.",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url of the callback."
          },
          "headers": {
            "type": "object",
            "description": "Object containing required Headers.",
            "properties": {}
          },
          "query": {
            "type": "object",
            "description": "Object containing Query parameters.",
            "properties": {}
          },
          "authentication": {
            "$ref": "#/components/schemas/WebhookCallbackAuthentication"
          },
          "body": {
            "type": "object",
            "description": "Custom body for POST/PATCH/PUT method. If null or not present, the body will use the standard format.",
            "properties": {
              "functions": {
                "description": "List of function used for the schema. Check our tutorials.",
                "type": "object",
                "properties": {}
              },
              "schema": {
                "description": "Schema used for transforming the response.",
                "type": "string"
              }
            }
          },
          "maxRate": {
            "type": "integer",
            "description": "Max Number of requests per second. *Future Use*",
            "default": 5,
            "format": "int32",
            "minimum": 1,
            "maximum": 50
          },
          "method": {
            "type": "string",
            "description": "The HTTP method expected for the Callback.",
            "enum": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "default": "POST"
          }
        }
      },
      "WebhookCallbackAuthentication": {
        "title": "WebhookCallbackAuthentication",
        "type": "object",
        "description": "Information on the Authentication.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the authentication to use for the callback.",
            "enum": [
              "BASIC_AUTHENTICATION",
              "NONE",
              "OAUTH_2",
              "OAUTH_2_CUSTOM1"
            ]
          },
          "clientId": {
            "type": "string",
            "description": "login for Basic Authentication, Client Id for OAuth 2.0."
          },
          "clientSecret": {
            "type": "string",
            "description": "Paswword for Basic Authentication or Client Secret for OAuth 2.0"
          },
          "tokenUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL for generating the OAuth 2.0 token. Ignored for Basic Authentication."
          },
          "refreshTokenUrl": {
            "type": "string",
            "format": "uri",
            "description": "Refresh URL for re generating the OAuth Token. If empty, the refresh mechanism will use the token Url. Ignored for Basic Authentication."
          },
          "grantType": {
            "type": "string",
            "description": "Grant Type for OAUTH 2.0, Only Client Credential is supported. Ignored for Basic Authentication.",
            "enum": [
              "CLIENT_CREDENTIAL"
            ],
            "example": "CLIENT_CREDENTIAL"
          },
          "clientAuthentication": {
            "type": "string",
            "description": "Indicates how the clientId & ClientSecret is transfered. For Basic Authentication, only _AUTHORIZATION_HEADER_ is supported.",
            "enum": [
              "AUTHORIZATION_HEADER",
              "CLIENT_CREDENTIAL_IN_BODY"
            ],
            "example": "AUTHORIZATION_HEADER"
          }
        }
      },
      "WebhookEvent": {
        "title": "WebhookEvent",
        "description": "Information the Webhook events.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Event Identifiers.",
            "enum": [
              "b2b:incident:new",
              "b2b:incident:update",
              "b2b:incident:delete",
              "b2b:incident-note:new",
              "b2b:incident-note:update",
              "b2b:incident-note:delete",
              "b2b:incident-freeze-period:new",
              "b2b:incident-freeze-period:update",
              "b2b:incident-freeze-period:delete",
              "b2b:incident-attachement:new",
              "b2b:incident-attachement:update",
              "b2b:incident-attachement:delete",
              "b2b:network-device:new",
              "b2b:network-device:update",
              "b2b:network-device:delete",
              "b2b:network-access-line:new",
              "b2b:network-access-line:update",
              "b2b:network-access-line:delete",
              "b2b:network-point-of-presence:new",
              "b2b:network-point-of-presence:update",
              "b2b:network-point-of-presence:delete",
              "b2b:location:new",
              "b2b:location:update",
              "b2b:location:delete",
              "b2b:servicePoint:new",
              "b2b:servicePoint:update",
              "b2b:servicePoint:delete",
              "b2b:configurationItem:new",
              "b2b:configurationItem:update",
              "b2b:configurationItem:delete",
              "b2b:change-request:new",
              "b2b:change-request:update",
              "b2b:change-request:delete",
              "b2b:change-catalog-item:new",
              "b2b:change-catalog-item:update",
              "b2b:change-catalog-item:delete",
              "b2b:change-note:new",
              "b2b:change-note:update",
              "b2b:change-note:delete",
              "b2b:change-attachement:new",
              "b2b:change-atachements:update",
              "b2b:change-attachment:delete",
              "b2b:maintenance:new",
              "b2b:maintenance:update",
              "b2b:maintenance:delete",
              "b2b:mobile-line:new",
              "b2b:mobile-line:update",
              "b2b:mobile-line:delete",
              "b2b:mobile-sim-card:new",
              "b2b:mobile-sim-card:update",
              "b2b:mobile-sim-card-delete",
              "b2b:mobile-request-new",
              "b2b:mobile-request:update",
              "b2b:mobile-request:delete",
              "b2b:order:new",
              "b2b:order:update",
              "b2b:order:delete",
              "b2b:commercial-request:new",
              "b2b:commercial-request:update",
              "b2b:commercial-request:delete"
            ]
          },
          "filters": {
            "type": "object",
            "description": "Filters on parameters"
          }
        }
      },
      "WebhookAdd": {
        "title": "WebhookAdd",
        "description": "Body for updating a Webhook rule.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Webhook rule."
          },
          "description": {
            "type": "string",
            "description": "Name of the Webhook rule."
          },
          "mode": {
            "type": "string",
            "description": "Mode of the notification. By selection 'ID_ONLY', the notification will sent only the ID and a GET is required to retrieve the item. By selecting the other option (default), the complete record is sent. For Custom response, this latest mode must be selected.",
            "enum": [
              "ID_ONLY",
              "ALL"
            ]
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag indicating if the Webhook rule is active or not."
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEvent"
            }
          },
          "callback": {
            "$ref": "#/components/schemas/WebhookCallback"
          }
        },
        "required": [
          "name",
          "description",
          "isActive",
          "events",
          "callback"
        ]
      },
      "WebhookUpdate": {
        "title": "WebhookUpdate",
        "description": "Body for updating a Webhook rule.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Webhook rule."
          },
          "description": {
            "type": "string",
            "description": "Name of the Webhook rule."
          },
          "mode": {
            "type": "string",
            "description": "Mode of the notification. By selection 'ID_ONLY', the notification will sent only the ID and a GET is required to retrieve the item. By selecting the other option (default), the complete record is sent. For Custom response, this latest mode must be selected.",
            "enum": [
              "ID_ONLY",
              "ALL"
            ]
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag indicating if the Webhook rule is active or not."
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEvent"
            }
          },
          "callback": {
            "$ref": "#/components/schemas/WebhookCallback"
          }
        }
      },
      "Documentation": {
        "title": "Documentation",
        "type": "object",
        "description": "Swagger (OpenAPI version) of the API in JSON format"
      },
      "VersionStruct": {
        "title": "VersionStruct",
        "description": "Information on the API Version",
        "type": "object",
        "properties": {
          "major": {
            "type": "string",
            "description": "Major number of the API."
          },
          "minor": {
            "type": "string",
            "description": "Minor number of the API."
          },
          "patch": {
            "type": "string",
            "description": "Patch number of the API."
          }
        }
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "description": "Information on the Error.",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code of the error.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Title of the error."
          },
          "description": {
            "type": "string",
            "description": "Description of the error."
          },
          "infoURL": {
            "type": "string",
            "description": "URL for additional information on the error."
          }
        }
      },
      "ME": {
        "title": "Me",
        "type": "object",
        "description": "Information on the connected user and the API Key.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the API key."
          },
          "login": {
            "type": "string",
            "description": "Login of the associated user."
          },
          "name": {
            "type": "string",
            "description": "Name of the associated user."
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the associated user."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the associated user."
          },
          "email": {
            "type": "string",
            "description": "Email address of the associated user."
          },
          "scopes": {
            "type": "string",
            "description": "Scopes defined for the API Key for Machine to Machine connection, or negotiated scopes for User to Machine connection."
          },
          "type": {
            "type": "string",
            "enum": [
              "SANDBOX",
              "PRODUCTION"
            ],
            "description": "Type of the environment (Sandbox or Production)"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of the creation of the API Key."
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update date of the API Key."
          }
        }
      },
      "Network-for-business-2_0_Error": {
        "description": "Information on the Error.",
        "type": "object",
        "properties": {
          "code": {
            "description": "Code of the error.",
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "description": "Title of the error.",
            "type": "string"
          },
          "description": {
            "description": "Description of the error.",
            "type": "string"
          },
          "infoURL": {
            "description": "URL for additional information on the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    },
    "securitySchemes": {
      "Orange": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.orange.com/oauth/v3/token",
            "scopes": {
              "b2b:webhook": "Allow to manage Webhook rules",
              "b2b:webhook:readonly": "Access in Read only all information of Webhook rules"
            },
            "refreshUrl": "https://api.orange.com/oauth/v3/token"
          }
        }
      }
    }
  }
}