{
  "openapi": "3.0.0",
  "info": {
    "description": "Ordering API allows you to manage the complete ordering process from the request up to deployment tracking. \nThe Ordering API covers mainly most of the Orange Business Catalog. \n\n### Internationalization\nBy default, data are in English but you can request data in French by specifying a language code in the Accept-Language header.\n_Example: Accept-Language: fr_\n\n### Resources \n- **requests** : Customer request to order a new service from the commercial catalog.\n- **catalogItems** : All types of requests managed by the API.\n- **quotes** : Commerical proposals after a request.(_International Only_)\n- **orders** : Commercial Orders resulting of Customer requests.\n- **reports** : Data Extracts (Requests, Orders...) .\n- **status** : Status of API components.\n- **version** : Version of the Ordering API.\n\n### Ordering API performs the following operations:\n- Retrieve a collection of request depending on filter criteria (next version).\n- Retrieve quote information\n- Retrieve a collection of catalog items depending on filter criteria.\n- Generate & Download reports.\n\n\n\n### Scopes\n\n| Scope | Features |\n| --- | --- |\n| b2b:ordering| Full access of the API. Ability to track requests and submit new request|\n| b2b:ordering:readonly | Allow to track requests |\n***\n\n\n\n  \n# Authentication\n \nThe authentication is based on OAuth 2.0 and and API Key provided by Orange Business Services.\n\nCopyright Â© OBS 2021. All Rights Reserved.",
    "version": "2.1.1",
    "title": "Ordering API",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/obs-api/swaggers/main/assets/logo.png",
      "backgroundColor": "#FFFFFF"
    },
    "contact": {
      "name": "Philippe VALETTE",
      "url": "https://developer.orange.com",
      "email": "philippe.valette@orange.com"
    }
  },
  "tags": [
    {
      "name": "Request Management",
      "description": "In progress"
    },
    {
      "name": "Quote Management",
      "description": "In progress"
    },
    {
      "name": "Order Management",
      "description": "In progress"
    },
    {
      "name": "Catalog Management",
      "description": "In progress"
    },
    {
      "name": "Reports",
      "description": "In progress"
    },
    {
      "name": "Misc",
      "description": "Swagger file, Status and version of the API"
    }
  ],
  "paths": {
    "/catalogItems": {
      "get": {
        "operationId": "FindCatalogItems",
        "summary": "Find Catalog Items",
        "description": "This method allows to list available catalog items for Commercial Requests.  The _CatalogItem_ object contains the schema describing in JSONSchema the format & constraints of a request (Body of _POST /requests_)\n\nMilestones, Schema are not returned by default, the _includes_ query parameter allows to define the response.",
        "deprecated": false,
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CatalogItemSort"
            },
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.\n__Example: sort=-name\n"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogItemFields"
              }
            },
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.\n__Example: fields=id,status"
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Catalog Items that match the exact value or formula about the Single Identifier."
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Catalog Items that match the exact value or formula about the Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "catalog.id",
            "description": "Returns Catalog Items that match the exact value or formula about the Catalog Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "catalog.name",
            "description": "Returns Catalog Items that match the exact value or formula about the Catalog Name."
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Returns Catalog Items  that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Returns Catalog Items  that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "description": "Flag for displaying the HATEOS links of linked ressources."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "schema",
                "milestones"
              ]
            },
            "in": "query",
            "name": "includes",
            "description": "Allow to includes extra data in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Catalog Management"
        ]
      }
    },
    "/catalogItems/aggregate": {
      "get": {
        "operationId": "AggregateCatalogItems",
        "summary": "Aggregate Catalog Items",
        "description": "This method allows to count Access Lines items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /accessLines/aggregate?groupBy=catalog.name`\n\nwill returns\n\n`\n{\n   'NETWORK': 5,\n   'CLOUD' : 1\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /requests/aggregate?groupBy=status,catalog.name`",
        "deprecated": false,
        "parameters": [
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Catalog Items that match the exact value or formula about the Single Identifier."
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Catalog Items that match the exact value or formula about the Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "catalog.id",
            "description": "Aggregates Catalog Items that match the exact value or formula about the Catalog Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "catalog.name",
            "description": "Aggregates Catalog Items that match the exact value or formula about the Catalog Name."
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Aggregates Catalog Items  that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Aggregates Catalog Items  that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "object",
                  "description": "The response will be a list of indicators with the number of items. `{ \"val1`: count1, \"val2\": count2 ...}`"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Catalog Management"
        ]
      },
      "parameters": []
    },
    "/catalogItems/{catalogItemId}": {
      "get": {
        "operationId": "GetCatalogItem",
        "summary": "Get details of a catalog item",
        "description": "This method allows to retrieve all information about a request including the schema.\n\n\nMilestones are not returned by default, the includes query parameter must be set.",
        "deprecated": false,
        "parameters": [
          {
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.\n__Example: fields=id,status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogItemFields"
              }
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            }
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "milestones",
                "schemas"
              ]
            },
            "in": "query",
            "name": "includes",
            "description": "Allow to includes extra data in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItem"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Catalog Management"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "catalogItemId",
          "description": "Orange Single Identifier of the catalog item.",
          "in": "path",
          "required": true
        }
      ]
    },
    "/orders": {
      "get": {
        "summary": "List Commercial Orders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "FindOrders",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.\n__Example: fields=id,status"
          },
          {
            "in": "query",
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "quote.id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of a Quote."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "request.id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of the Requests."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerReference",
            "description": "Returns Orders that match the exact value or formula about the Customer Reference."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "agreement.id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of the Agreement.."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "isArchived",
            "description": "Flag for displaying archived or not archived orders."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.offer.id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of the Offer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.offer.name",
            "description": "Returns Orders that match the exact value or formula about the Name of the Offer."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "CANCELLED",
                "NEW",
                "COMPLETED",
                "DRAFT",
                "EXPIRED",
                "REJECTED",
                "UNKNOWN",
                "IN_PROGRESS",
                "AWAITING_CUSTOMER_ACTION"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Returns Orders that match the exact value or formula about Status."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY",
                "ORDER_INITIATION",
                "ORDER_ACCEPTANCE"
              ]
            },
            "in": "query",
            "name": "step",
            "description": "Returns Orders that match the exact value or formula about the Step."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "PENDING_APPROVAL",
                "LOCAL_VALIDATION",
                "IN_PROGRESS",
                "ACCEPTED",
                "CANCELLED",
                "COMPLETED",
                "UNKNOWN"
              ]
            },
            "in": "query",
            "name": "subStep",
            "description": "Returns Orders that match the exact value or formula about the Sub Step."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerPurchaseOrder",
            "description": "Returns Orders that match the exact value or formula about the Customer Purchase Order Number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "complementaryCustomerPurchaseOrder",
            "description": "Returns Orders that match the exact value or formula about the Complementary Purchase Order Number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "secondaryCustomerReference",
            "description": "Returns Orders that match the exact value or formula about the Secondary Purchase Order Number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of the Customer Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.name",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of the Customer Name."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "CHANGE",
                "DISCONNECT"
              ]
            },
            "in": "query",
            "name": "category",
            "description": "Returns Orders that match the exact value or formula about the Category. (_NEW_,_CHANGE_, _DISCONNECT_)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "request.customerReference",
            "description": "Returns Orders that match the exact value or formula about the Request Customer Reference."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "servicePoint.id",
            "description": "Returns Orders that match the exact value or formula about the Single Identifier of the Service Point (available only when the Service is deployed)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "servicePoint.name",
            "description": "Returns Orders that match the exact value or formula about the Service Point Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "servicePoint.customerReference",
            "description": "Filter by one or several Service Point Customer Reference."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "primaryContact.name",
            "description": "Returns Orders that match the exact value or formula about the Primary Contact Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "secondaryContact.name",
            "description": "Returns Orders that match the exact value or formula about the Secondary  Contact Orange Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "billing.id",
            "description": "Returns Orders that match the exact value or formula about the Billing Account Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Returns Orders that match the exact value or formula about the Type. (Reference in Catalog Item)"
          },
          {
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            },
            "in": "query",
            "name": "isOverdue",
            "description": "Flag for displaying Orders On time or Delayed."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.issuedAt",
            "description": "Returns Orders that match the exact value or formula about the date when the Order was submitted to Orange. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.requestedAt",
            "description": "Returns Orders that match the exact value or formula about the Delivery date requested by the Customer to Orange. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.expectedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the Order was expected to be Ready for Service. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.customerSignedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the order was signed. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.validatedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the order was validated. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "keyDates.inHouseWiringCompletedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the wiring was done. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.equipmentOrderedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the equipment was ordered. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.equipmentDeliveredAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the equipment was delivered on site. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.circuitOrderedAt",
            "description": "Returns Orders that match the exact value or formula about the dDate when the circuit was ordered from the Carrier. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.circuitDeliveredAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the circuit was delivered. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.reInstallationPlannedAt",
            "description": "Returns Orders that match the exact value or formula about the date when the Hardware must be re installed. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.billingStartedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the billing was started. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.billingStoppedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the billing was stopped. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.activatedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the order was activated. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.informationSentAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the information was sent. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.disconnectedAt",
            "description": "Returns Orders that match the exact value or formula about the date when the service has been disconnected. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.disconnectionRequestedAt",
            "description": "Returns Orders that match the exact value or formula about the Disconnection date requested by the customer. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.deliveryRequestedAt",
            "description": "Returns Orders that match the exact value or formula about the Delivery Date requested by the customer. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.hardwareInstallationPlannedAt",
            "description": "Returns Orders that match the exact value or formula about the date when the hardware should be installed. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.orderValidatedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the Order has been validated by Orange. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_ ."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.cancelledAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the order was cancelled. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "keyDates.completedAt",
            "description": "Returns Orders that match the exact value or formula about the Date when the order was completed. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Returns Orders that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Returns Orders that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "notes",
                "steps",
                "attachments",
                "services",
                "pricing"
              ]
            },
            "in": "query",
            "name": "includes",
            "description": "Allow to includes extra data in the response"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ON_HOLD",
                "ON_TRACK",
                "DELAYED",
                "UNKNOWN"
              ]
            },
            "in": "query",
            "name": "deliveryStatus",
            "description": "Returns Orders that match the exact value or formula about the Delivery Status."
          }
        ],
        "description": "This method allows to list all orders matching criterias. \n\nAn order is a object created by Orange after a Customer Request.\n\nSome additional data such as pricing, notes, attachments are not returned by default. The expected extra data must be specified thru _includes_ attribute.\n\n_Note_: Not all Orders have a request or quote Identifier.",
        "tags": [
          "Order Management"
        ]
      }
    },
    "/orders/aggregate": {
      "get": {
        "summary": "Aggregate Orders",
        "tags": [
          "Order Management"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response will be a list of indicators with the number of items. `{ \"val1`: count1, \"val2\": count2 ...}`"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregateOrders",
        "parameters": [
          {
            "name": "groupBy",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "List of attributes (separated by Comma) to aggregate."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "quote.id",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier of a Quote."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "request.id",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier of the Requests."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerReference",
            "description": "Aggregates Orders that match the exact value or formula about the Customer Reference."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "agreement.id",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier of the Agreement.."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "isArchived",
            "description": "Flag for displaying archived or not archived orders."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.offer.id",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier of the Offer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.offer.name",
            "description": "Aggregates Orders that match the exact value or formula about the Name of the Offer."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "IN_PROGESS",
                "CANCELLED",
                "NEW",
                "COMPLETED",
                "DRAFT",
                "EXPIRED",
                "REJECTED",
                "UNKNOWN"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Aggregates Orders that match the exact value or formula about Status."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "step",
            "description": "Aggregates Orders that match the exact value or formula about the Step."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subStep",
            "description": "Aggregates Orders that match the exact value or formula about the Sub Step."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerPurchaseOrder",
            "description": "Aggregates Orders that match the exact value or formula about the Customer Purchase Order Number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "complementaryCustomerPurchaseOrder",
            "description": "Aggregates Orders that match the exact value or formula about the Complementary Purchase Order Number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "secondaryCustomerReference",
            "description": "Aggregates Orders that match the exact value or formula about the Secondary Purchase Order Number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.id",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier of the Customer Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.name",
            "description": "Aggregates Orders that match the exact value or formula about the Single Identifier of the Customer Name."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "CHANGE",
                "DISCONNECT"
              ]
            },
            "in": "query",
            "name": "category",
            "description": "Aggregates Orders that match the exact value or formula about the Category. (_NEW_,_CHANGE_, _DISCONNECT_)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "request.customerReference",
            "description": "Aggregates Orders that match the exact value or formula about the Request Customer Reference."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "servicePoint.id",
            "description": "Aggregates  Orders that match the exact value or formula about the Single Identifier of the Service Point (available only when the Service is deployed)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "servicePoint.name",
            "description": "Aggregates Orders that match the exact value or formula about the Service Point Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "servicePoint.customerReference",
            "description": "Filter by one or several Service Point Customer Reference."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "primaryContact.name",
            "description": "Aggregates Orders that match the exact value or formula about the Primary Contact Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "secondaryContact.name",
            "description": "Aggregates Orders that match the exact value or formula about the Secondary  Contact Orange Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "billing.id",
            "description": "Aggregates Orders that match the exact value or formula about the Billing Account Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Aggregates Orders that match the exact value or formula about the Type. (Reference in Catalog Item)"
          },
          {
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            },
            "in": "query",
            "name": "isOverdue",
            "description": "Flag for displaying Orders On time or Delayed."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.issuedAt",
            "description": "Aggregates Orders that match the exact value or formula about the date when the Order was submitted to Orange. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.requestedAt",
            "description": "Filter by the date requested by the Customer for the service activation.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.expectedAt",
            "description": "Filter by the expected date of the service activation.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.customerSignedAt",
            "description": "Filter by the date when the Customer signed the order/quote.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.validatedAt",
            "description": "Filter by the date when Orange validated the request/order.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "keyDates.inHouseWiringCompletedAt",
            "description": "Filter by the date when the Circuit is really active.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.equipmentOrderedAt",
            "description": "Filter by the date when the equipment/device was ordered by Orange.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.equipmentDeliveredAt",
            "description": "Filter by the date when the equipment/device was delivered.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.circuitOrderedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.circuitDeliveredAt",
            "description": "Filter by date when the Access Line/Circuit was installed.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.reInstallationPlannedAt",
            "description": "Filter by the date of the new planned installation.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.billingStartedAt",
            "description": "Filter by the date when the billing started.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.billingStoppedAt",
            "description": "Filter by the date when the billing was stopped.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.activatedAt",
            "description": "Filter by the date when the service has been activated.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.informationSentAt",
            "description": "Filter by the date when the Customer was notified.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.disconnectedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.disconnectionRequestedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.deliveryRequestedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.hardwareInstallationTargetAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.orderValidatedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.cancelledAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "keyDates.completedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.acceptedAt",
            "description": "Filter by the issued date.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\\n_Example: 2015-04-09_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Returns Orders that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Returns Orders that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          }
        ],
        "description": "This method allows to count Order items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /orders/aggregate?groupBy=status`\n\nwill returns\n\n`\n{\n   'IN_PROGRESS': 5,\n   'COMPLETED' : 10,\n   'NEW' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /orders/aggregate?groupBy=status,step `\n\n"
      }
    },
    "/orders/{orderId}": {
      "get": {
        "summary": "Get Details of an order",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "GetOrder",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "notes",
                "steps",
                "attachments",
                "services",
                "pricing"
              ]
            },
            "in": "query",
            "name": "includes",
            "description": "Allow to includes extra data in the response"
          }
        ],
        "description": "This method allows to retrieve details of an order.\n\nAn order is a object created by Orange after a Customer Request.\n\nSome additional data such as pricing, notes, attachments are not returned by default. The expected extra data must be specified thru _includes_.",
        "tags": [
          "Order Management"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "description": "Single Identifier of an Order.",
          "in": "path",
          "required": true
        }
      ]
    },
    "/orders/{orderId}/notes": {
      "get": {
        "summary": "List Notes of an order",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "FindOrderNotes",
        "description": "This method allows to list all notes, comments written by Orange or Customer on an Order.\n\n> This method is only available for International Customers. \n\n",
        "tags": [
          "Order Management"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "boolean",
              "default": false,
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "string",
              "format": "int32"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "description": "Single Identifier of an Order.",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "operationId": "AddOrderNote",
        "summary": "Add a new note to an order.",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            },
            "headers": {
              "Content-Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the item."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "This end-point allows to add a Note on an Order.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          }
        ],
        "tags": [
          "Order Management"
        ],
        "requestBody": {
          "description": "This method allows to add a new Note to an Order.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotePOST"
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/attachments": {
      "get": {
        "summary": "Get Details of an attachment",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "FindOrderAttachments",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,name"
          },
          {
            "schema": {
              "type": "boolean",
              "default": false,
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          }
        ],
        "description": "This method allows to list all attachements of an Order.\n\nThe file can be download thru the url provided in the item.\nThe download must be done using a binary transfer as files can be images, documents (pdf...)\n\n",
        "tags": [
          "Order Management"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "description": "Single Identifier of an Order.",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "operationId": "AddOrderAttachement",
        "summary": "Add a new attachment to an Order.",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "headers": {
              "Content-Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the item."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "This end-point allows to add an Attachment to an Order.",
        "tags": [
          "Order Management"
        ],
        "requestBody": {
          "description": "This method allows to add a new Attchement to an Order.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentPOST"
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/steps": {
      "get": {
        "summary": "Find Order Steps",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "FindOrderSteps",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,name"
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          }
        ],
        "tags": [
          "Order Management"
        ],
        "description": "This method allows to list all steps (milestone) of an order.\n\n\n> This method is only available for the International Customers.\n\n"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "description": "Single Identifier of an Order.",
          "in": "path",
          "required": true
        }
      ]
    },
    "/requests": {
      "post": {
        "operationId": "CreateRequest",
        "summary": "Send new Request",
        "description": "Ordering API allows to send new request to Orange Business Services. The attribut _type_ indicates the request model (available in Catalog Items). Specific Catalog request are not displayed in this documents. Please contact your Orange representative.",
        "deprecated": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/RequestPOST"
              }
            }
          },
          "description": "This method allows to submit a new request to Orange. "
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            },
            "headers": {
              "Content-Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the item"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          }
        ],
        "tags": [
          "Request Management"
        ]
      },
      "get": {
        "summary": "List Requests",
        "description": "This method allows to list all commercial requests matching criterias. \n\nBy default, additional data such as _quotes_, _attachments_ are not included in the response. The Query Parameter _includes_ must be specified.",
        "operationId": "FindRequests",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request"
                  }
                }
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filters requests matching the list of identiifers or the advanced criteria."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Filters requests matching the list of status or the advanced criteria."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Filter by one or several request types."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
              ]
            },
            "in": "query",
            "name": "priority",
            "description": "Filter by one or several priorities."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "CHANGE",
                "DISCONNECT"
              ]
            },
            "in": "query",
            "name": "category",
            "description": "Filter by one or several Categories."
          },
          {
            "schema": {
              "type": "number",
              "enum": [
                0,
                1
              ]
            },
            "in": "query",
            "name": "isOverdue",
            "description": "Filters requests if they are delayed or not."
          },
          {
            "schema": {
              "type": "number",
              "enum": [
                0,
                1
              ]
            },
            "in": "query",
            "name": "isArchived",
            "description": "Filters requests if they are archived or not."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter by one or several request name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerReference",
            "description": "Filter by one or several references set by the Customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "step",
            "description": "Filter by one or several steps."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subStep",
            "description": "Filter by one or several sub steps."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.id",
            "description": "Filter by one or several Customer Identifiers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.name",
            "description": "Filter by one or several Customer Names."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.issuedAt",
            "description": "Filter by the date when the request was submitted to Orange."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.requestedAt",
            "description": "Filter by the date when the service should be activated."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.expectedInstallationAt",
            "description": "Filter by the date when the service is expected to be installed in Customer Premises."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.expectedAt",
            "description": "Filter by the date when the service is expected to be ready."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.completedAt",
            "description": "Filter by the date when the service was ready."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.servicePoint.id",
            "description": "Filter by one or several Service Point Identifiers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.servicePoint.customerReference",
            "description": "Filter by one or several Service Point references set by the Customer."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is _null_."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachments",
                "quotes"
              ]
            },
            "in": "query",
            "name": "includes",
            "description": "Allow to includes extra data in the response"
          }
        ],
        "tags": [
          "Request Management"
        ]
      }
    },
    "/requests/aggregate": {
      "get": {
        "summary": "Aggregate Requests",
        "tags": [
          "Request Management"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response will be a list of values with the number of items. `{ \"val1`: count1, \"val2\": count2 ...}`"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregateRequests",
        "description": "This method allows to count Request items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /requests/aggregate?groupBy=status`\n\nwill returns\n\n`\n{\n   'IN_PROGRESS': 5,\n   'COMPLETED' : 10,\n   'NEW' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /requests/aggregate?groupBy=status,step `",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupBy",
            "description": "List of attributes to aggregate",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "COUNT",
                "VALUE"
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the values or counters. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-count"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filters requests matching the list of identiifers or the advanced criteria."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Filters requests matching the list of status or the advanced criteria."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Filter by one or several request types."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
              ]
            },
            "in": "query",
            "name": "priority",
            "description": "Filter by one or several priorities."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "CHANGE",
                "DISCONNECT"
              ]
            },
            "in": "query",
            "name": "category",
            "description": "Filter by one or several Categories."
          },
          {
            "schema": {
              "type": "number",
              "enum": [
                0,
                1
              ]
            },
            "in": "query",
            "name": "isOverdue",
            "description": "Filters requests if they are delayed or not."
          },
          {
            "schema": {
              "type": "number",
              "enum": [
                0,
                1
              ]
            },
            "in": "query",
            "name": "isArchived",
            "description": "Filters requests if they are archived or not."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter by one or several request name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerReference",
            "description": "Filter by one or several references set by the Customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "step",
            "description": "Filter by one or several steps."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subStep",
            "description": "Filter by one or several sub steps."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.id",
            "description": "Filter by one or several Customer Identifiers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.name",
            "description": "Filter by one or several Customer Names."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.issuedAt",
            "description": "Filter by the date when the request was submitted to Orange."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.requestedAt",
            "description": "Filter by the date when the service should be activated."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.expectedInstallationAt",
            "description": "Filter by the date when the service is expected to be installed in Customer Premises."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.expectedAt",
            "description": "Filter by the date when the service is expected to be ready."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyDates.completedAt",
            "description": "Filter by the date when the service was ready."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.servicePoint.id",
            "description": "Filter by one or several Service Point Identifiers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "properties.servicePoint.customerReference",
            "description": "Filter by one or several Service Point references set by the Customer."
          }
        ]
      }
    },
    "/requests/{requestId}": {
      "get": {
        "summary": "Get Request Details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "GetRequest",
        "description": "This method allows to retrieve all details of a commercial request. \n\nBy default, additional data such as _quotes_, _attachments_ are not included in the response. The Query Parameter _includes_ must be specified.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          }
        ],
        "tags": [
          "Request Management"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "requestId",
          "description": "Single Identifier of a Request.",
          "in": "path",
          "required": true
        }
      ]
    },
    "/requests/{requestId}/quotes": {
      "get": {
        "summary": "Find Quotes of a Request",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Quote"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "GetRequestQuotes",
        "description": "Retrieve all quotes associated to a request.\n\n\n> This method is only available for International Customers. \n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null."
          },
          {
            "schema": {
              "type": "boolean",
              "enum": [
                false,
                true
              ]
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filter by one or several Quotes Identifiers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Filter by one or several status."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Filter by the creation date .The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Filter by the last update date.The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          }
        ],
        "tags": [
          "Quote Management"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "requestId",
          "description": "Single Identifier of a Request.",
          "in": "path",
          "required": true
        }
      ]
    },
    "/quotes/{quoteId}": {
      "get": {
        "summary": "Get Details of a Quote",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "GetQuote",
        "description": "Get details of a Quote. Addiitonal data such as attachements, notes, \n\n> This method is only available for the International Customers.\n",
        "tags": [
          "Quote Management"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all fields even if the value is null."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "quoteId",
          "description": "Single Identifier of a Request",
          "in": "path",
          "required": true
        }
      ]
    },
    "/reports": {
      "get": {
        "summary": "Find Generated Reports",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reports"
                  }
                }
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "FindReports",
        "description": "This methods allows to list all on demand generated reports. A report is delivered as a File that can be downloaded.  \n\n> This method is only available for the French Customers and activated on demand. Please contact your Orange Representative.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 250,
              "default": 250
            },
            "in": "query",
            "name": "limit",
            "description": "The maximum number of items to retrieve."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.__Example: sort=-name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Returns Reports that match the exact value or formula about the Report Identifiers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category",
            "description": "Returns Access Lines that match the exact value or formula about the Report category."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Returns Access Lines that match the exact value or formula about the Report Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "format",
            "description": "Returns Reports that match the exact value or formula about the Report format."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.id",
            "description": "Returns Reports that match the exact value or formula about the Customer Single Identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.name",
            "description": "Returns Reports that match the exact value or formula about the Customer Name."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Filter by the creation date .The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Filter by the last update date.The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          }
        ]
      }
    },
    "/reports/{reportId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "reportId",
          "description": "Single Identifier of a Report.",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Details of a Report",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reports"
                }
              },
              "text/csv": {
                "schema": {
                  "description": "Response in CSV format.",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "GetReport",
        "description": "This method allows to retrieve details of a report. A report is delivered as a File that can be downloaded.  \n\n> This method is only available for the French Customers and activated on demand. Please contact your Orange Representative.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-Key",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.__Example: fields=id,status"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "displayNulls",
            "description": "Flag for displaying all attributes even if the value is null."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "displayLinks",
            "description": "Flag for displaying the HATEOS links of linked ressources."
          }
        ]
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "GetAPIVersion",
        "summary": "Retrieve the version",
        "description": "Return the current version of the API including Major Release number, Minor Release number and Patch number.\n\nThe Major Release number is present in the URI of the API. \n\nThe API Key is not required for accessing this end-point.",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "GetAPIStatus",
        "summary": "Retrieve the status",
        "description": "This method allows to get the status of the API. \n\nThe API Key is not required for accessing this end-point.",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/doc": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "DownloadSwagger",
        "summary": "Download the Swagger",
        "description": "This method allows to download the current Swagger file of the API. \n\nThe API Key is not required for accessing this end-point.",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Documentation"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.orange.com/ordering/b2b/v2",
      "description": "Orange Developer"
    }
  ],
  "components": {
    "schemas": {
      "LocationType": {
        "type": "string",
        "enum": [
          "BUILDING",
          "MALL",
          "SHOP",
          "FACTORY",
          "HEADQUARTER",
          "OTHER"
        ],
        "title": "LocationType",
        "description": "Type of the location."
      },
      "CatalogItemFields": {
        "type": "string",
        "description": "Allow to have a partial response with only required attributes. The query parameter must contain a list of attributes separated by a comma.\n__Example: fields=id,status",
        "enum": [
          "id",
          "name",
          "createdAt",
          "updatedAt",
          "schema",
          "catalog.id",
          "catalog.name",
          "catalog.description"
        ]
      },
      "CatalogItemSort": {
        "type": "string",
        "description": "Sort the result by the specified attribute. The descending order can be specify by prefixing the attribute name with a \"-\" sign.\n__Example: sort=-name\n",
        "enum": [
          "id",
          "-id",
          "name",
          "-name",
          "createdAt",
          "-createdAt",
          "updatedAt",
          "-updatedAt",
          "catalog.id",
          "-catalog.id",
          "catalog.name",
          "-catalog.name"
        ]
      },
      "ErrorDetail": {
        "description": "Complementary Information on the Error.",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Orange Code of the error.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Title of the error."
          },
          "description": {
            "type": "string",
            "description": "Detailed information on the Error."
          },
          "infoURL": {
            "type": "string",
            "description": "URL for additional information on the Error."
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "description": "Information on the Error.",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Orange Code of the error.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Title of the error."
          },
          "description": {
            "type": "string",
            "description": "Detailed information on the Error."
          },
          "infoURL": {
            "type": "string",
            "description": "URL for additional information on the Error."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          }
        }
      },
      "APIStatuses": {
        "type": "string",
        "description": "Status of the API.",
        "enum": [
          "ok",
          "ko"
        ]
      },
      "Status": {
        "description": "Information on the status of the API.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the current API.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatuses"
          },
          "version": {
            "description": "API version (major dot minor dot patch numbers).",
            "type": "string"
          }
        },
        "required": [
          "name",
          "status",
          "version"
        ]
      },
      "Customer": {
        "description": "Information on the Customer.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the customer account.",
            "type": "string"
          },
          "name": {
            "description": "Name of the Customer.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Requester": {
        "description": "Information on the requester of the Order.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the individual.",
            "type": "string"
          },
          "title": {
            "description": "The title of the individual:  _Mr._, _Mrs._",
            "type": "string"
          },
          "name": {
            "description": "The title and the first and last name of the individual.",
            "type": "string"
          },
          "firstName": {
            "description": "The firstname of the individual.",
            "type": "string"
          },
          "lastName": {
            "description": "The lastname of the individual.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the individual. There is no need to include the scheme \"mailto:\".",
            "type": "string",
            "format": "email"
          },
          "phone": {
            "description": "The phone number.  Use the [Rec.E164](http://www.itu.int/rec/T-REC-E.164/) without \"+\" prefix.",
            "type": "string"
          },
          "mobile": {
            "description": "The mobile phone number. Use the [Rec.E164](http://www.itu.int/rec/T-REC-E.164/) without \"+\" prefix.",
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Role of the Individual such as _Customer Service Managed_, _Responsable Sevice Client_"
          },
          "note": {
            "type": "string",
            "description": "Note on the Individual"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "mobile"
        ],
        "title": "Individual"
      },
      "AddressOrder": {
        "description": "Model of an address.",
        "type": "object",
        "properties": {
          "street": {
            "description": "Street name of the address.",
            "type": "string",
            "maxLength": 55
          },
          "postalCode": {
            "description": "Postal code of the address.",
            "type": "string"
          },
          "city": {
            "description": "City of the address.",
            "type": "string"
          },
          "country": {
            "description": "Country of the address.",
            "type": "string",
            "default": "FR"
          }
        },
        "required": [
          "street",
          "postalCode",
          "city",
          "country"
        ]
      },
      "LocationOrder": {
        "description": "Model of a location.",
        "type": "object",
        "x-examples": {},
        "properties": {
          "legalIdentifier": {
            "description": "SIRET for France",
            "type": "string"
          },
          "customerReference": {
            "description": "External reference of the location.",
            "type": "string"
          },
          "name": {
            "description": "Name of the location.",
            "type": "string"
          },
          "company": {
            "description": "Company of the location.",
            "type": "string"
          },
          "building": {
            "description": "Building name of the location.",
            "type": "string"
          },
          "floor": {
            "description": "Floor number of the location.",
            "type": "string"
          },
          "stairCases": {
            "description": "Stair cases of the building",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressOrder"
          },
          "primaryContact": {
            "$ref": "#/components/schemas/PrimaryIndividual"
          },
          "secondaryContact": {
            "$ref": "#/components/schemas/SecondaryIndividual"
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          }
        },
        "required": [
          "name",
          "address",
          "primaryContact"
        ]
      },
      "HTTPMethod": {
        "description": "List of HTTP methods.",
        "type": "string",
        "enum": [
          "GET",
          "PATCH",
          "POST",
          "DELETE"
        ]
      },
      "PrimaryIndividual": {
        "type": "object",
        "description": "Information on the Primary Contact.",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the Primary Contact. For example: _M._"
          },
          "name": {
            "type": "string",
            "description": "Full Name of the Primary Contact."
          },
          "firstName": {
            "type": "string",
            "description": "First Name of the Primary Contact."
          },
          "lastName": {
            "type": "string",
            "description": "Last Name of the Primary Contact."
          },
          "phone": {
            "type": "string",
            "description": "Phone Number of the Primary Contact."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Number of the Primary Contact."
          },
          "email": {
            "type": "string",
            "description": "Email of the Primary Contact."
          },
          "roles": {
            "type": "array",
            "description": "Roles of the Primary Contact.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "SecondaryIndividual": {
        "type": "object",
        "description": "Information on the Secondary Contact.",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the Secondary Contact. For example: _M._"
          },
          "name": {
            "type": "string",
            "description": "Full Name of the Secondary Contact."
          },
          "firstName": {
            "type": "string",
            "description": "First Name of the Secondary Contact."
          },
          "lastName": {
            "type": "string",
            "description": "Last Name of the Secondary Contact."
          },
          "phone": {
            "type": "string",
            "description": "Phone Number of the Secondary Contact."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Number of the Secondary Contact."
          },
          "email": {
            "type": "string",
            "description": "Email of the Secondary Contact."
          },
          "roles": {
            "type": "array",
            "description": "Roles of the Secondary Contact.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Hyperlink": {
        "description": "Link on the resource.",
        "required": [
          "href"
        ],
        "type": "object",
        "properties": {
          "href": {
            "description": "URI of the resource",
            "type": "string"
          },
          "method": {
            "$ref": "#/components/schemas/HTTPMethod"
          },
          "payload": {
            "description": "Body for POST or PATCH methods",
            "type": "string"
          }
        }
      },
      "Request": {
        "description": "Describes all attributes of a Commercial Request",
        "discriminator": {
          "propertyName": "type"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Request"
          },
          "name": {
            "type": "string",
            "description": "Name of the request."
          },
          "customerReference": {
            "type": "string",
            "description": "Reference of the request set by the Customer."
          },
          "category": {
            "type": "string",
            "description": "Category of the request. Values are limited to _NEW_ for creation, _CHANGE_ for updating an existing service and _DISCONNECT_ for requestiong the termination of a service.",
            "enum": [
              "NEW",
              "CHANGE",
              "DISCONNECT"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the Request with the following values: _NEW_ when the request is not yet validated by Orange, _IN_PROGRESS_ when the request is under deployment, _COMPLETED_ when the request is deployed.",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "COMPLETED",
              "REJECTED",
              "CANCELED",
              "UNKNOWN"
            ]
          },
          "step": {
            "type": "string",
            "enum": [
              "REQUEST",
              "ORDER",
              "QUOTE"
            ],
            "description": "Step stage of the request"
          },
          "subStep": {
            "type": "string",
            "enum": [
              "INITIATION",
              "IN_PROGRESS",
              "APPROVAL",
              "DELIVERY",
              "ACCEPTANCE"
            ],
            "description": "Sub step of the request."
          },
          "isOverdue": {
            "type": "string",
            "description": "Flag indicating that the deployment is postponed."
          },
          "isArchived": {
            "type": "string",
            "description": "Flag indicating that the request is archived in our systems."
          },
          "priority": {
            "type": "string",
            "enum": [
              "HIGH",
              "MEDIUM",
              "LOW",
              "UNKNWON"
            ],
            "description": "Priority of the Request."
          },
          "customer": {
            "type": "object",
            "description": "Information on the Customer.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Orange Single Identifier of the Customer."
              },
              "name": {
                "type": "string",
                "description": "Name of the Customer."
              }
            }
          },
          "keyDates": {
            "type": "object",
            "description": "Information on the Customer.",
            "properties": {
              "issuedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the request has been sumitted to Orange."
              },
              "requestedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the request is expected to be deployed."
              },
              "expectedInstallationAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the Access Line is planned to be installed."
              },
              "expectedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the service is expected to be activated by Orange."
              },
              "completedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the service is really deployed."
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Identifier of the Type of request."
          },
          "properties": {
            "type": "object",
            "description": "Properties of the request following the type value."
          },
          "comment": {
            "type": "string",
            "description": "Customer comment on the request."
          },
          "quotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quote"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the last update occured on the record. There is no business meaning, allows to synchronise data."
          },
          "_links": {
            "type": "object",
            "description": "HATEOS links on the nested resources.",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/Hyperlink"
              },
              "quotes": {
                "$ref": "#/components/schemas/Hyperlink"
              }
            }
          }
        },
        "title": "Request"
      },
      "Offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the offer"
          },
          "name": {
            "type": "string",
            "description": "Name of the offer"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "Offer",
        "description": "Information on the Associated Offer."
      },
      "Note": {
        "type": "object",
        "description": "Attributes of a Note",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the note"
          },
          "title": {
            "type": "string",
            "description": "Summary of the note"
          },
          "type": {
            "type": "string",
            "description": "Type of the note"
          },
          "body": {
            "type": "string",
            "description": "Main message of the note"
          },
          "author": {
            "type": "string",
            "description": "Name of the Author of the note. If the note is written by Orange staff, the author name will be 'Orange'."
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "description": "Creation date of the item in Orange Database. There is not Business meaning. This field can be use to retrieve only new items.   The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_"
          }
        },
        "required": [
          "id",
          "title",
          "body",
          "createdAt",
          "updatedAt"
        ],
        "title": "Note"
      },
      "NotePOST": {
        "type": "object",
        "description": "Attributes of a Note",
        "title": "Note",
        "properties": {
          "title": {
            "type": "string",
            "description": "Summary of the note"
          },
          "type": {
            "type": "string",
            "description": "Type of the note"
          },
          "body": {
            "type": "string",
            "description": "Main message of the note"
          },
          "author": {
            "type": "string",
            "description": "Name of the Author of the note. If the note is written by Orange staff, the author name will be 'Orange'."
          }
        },
        "required": [
          "title",
          "body"
        ]
      },
      "Catalog": {
        "type": "object",
        "description": "Information on the Catalog.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Catalog."
          },
          "name": {
            "type": "string",
            "description": "Name of the Catalog such as 'Network Solutions'."
          },
          "description": {
            "type": "string",
            "description": "Overview of the catalog."
          }
        },
        "required": [
          "id",
          "name",
          "description"
        ],
        "title": "Catalog"
      },
      "CatalogItem": {
        "type": "object",
        "description": "Properties of a Catalog Item that define a request. The schema attribute describe the format of the  body of a _POST /request_.",
        "title": "Catalog Item",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Catalog Item"
          },
          "name": {
            "type": "string",
            "description": "Name of the Catalog Item"
          },
          "catalog": {
            "$ref": "#/components/schemas/Catalog"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_"
          },
          "schema": {
            "type": "string",
            "description": "Provide the format & contraints of the request in JSON Schema format. The format is [JSON schema](https://whttps://json-schema.org/) format."
          },
          "milestones": {
            "type": "string",
            "description": "Described the different steps for deploying the service. (_France only_)"
          },
          "_links": {
            "$ref": "#/components/schemas/CatalogItemLinks"
          }
        },
        "required": [
          "id",
          "name",
          "catalog",
          "createdAt",
          "updatedAt"
        ]
      },
      "CatalogItemLinks": {
        "required": [
          "self",
          "location"
        ],
        "description": "HATEOS links on nested resources.",
        "type": "object",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "requests": {
            "$ref": "#/components/schemas/Hyperlink"
          }
        }
      },
      "RequestPOST": {
        "description": "Attributes of a Request.",
        "discriminator": {
          "propertyName": "type",
          "type": "object"
        },
        "type": "object",
        "title": "RequestPOST",
        "properties": {
          "customerReference": {
            "description": "Indicate your own reference",
            "type": "string"
          },
          "contract": {
            "description": "Contract Id allowing to apply the  right tariff",
            "type": "string"
          },
          "requestedAt": {
            "description": "Date when the Customer want to have the request completed. Delays depends of the Orange Process. For example, not less 8 days between the issued date and the requested date.",
            "type": "string",
            "format": "date"
          },
          "customer": {
            "description": "Model of a customer.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier of the customer account.",
                "type": "string"
              },
              "name": {
                "description": "Name of the Customer.",
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "description": "Model describing an attachment for the creation",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the file.",
                  "type": "string"
                },
                "format": {
                  "description": "Type of the file.",
                  "type": "string"
                },
                "body": {
                  "description": "Content of the file. The attribut must be encoded in   [Base64 format](https://fr.wikipedia.org/wiki/Base64)",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "format",
                "body"
              ]
            }
          },
          "comment": {
            "description": "Additional information on the order",
            "type": "string"
          },
          "type": {
            "description": "Type of the request. The properties attribute depends of the value in Type.",
            "type": "string"
          }
        },
        "required": [
          "requestedAt",
          "type"
        ]
      },
      "AttachmentPOST": {
        "description": "Model describing an attachment for the creation",
        "required": [
          "name",
          "format",
          "body"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the file.",
            "type": "string"
          },
          "format": {
            "description": "Type of the file.",
            "type": "string"
          },
          "body": {
            "description": "Content of the file encoded in base64",
            "type": "string"
          }
        }
      },
      "Version": {
        "description": "Information on the API Version",
        "required": [
          "version",
          "deprecated"
        ],
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/VersionStruct"
          },
          "deprecated": {
            "description": "Flag indicating that API is deprecated",
            "type": "boolean"
          }
        }
      },
      "VersionStruct": {
        "description": "Information on the Version",
        "required": [
          "major",
          "minor",
          "patch"
        ],
        "type": "object",
        "properties": {
          "major": {
            "description": "Major number of the API",
            "type": "string"
          },
          "minor": {
            "description": "Minor number of the API",
            "type": "string"
          },
          "patch": {
            "description": "Patch number of the API",
            "type": "string"
          }
        }
      },
      "ServicePoint": {
        "type": "object",
        "description": "Information of the Service Point to disconnect. Only one of these fields is mandatory. However, the attribute & value must match only one item. Otherwise, an error is returned.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Service Point. This information can be found in the API Core Information in the resource _servicePoints_."
          },
          "customerReference": {
            "type": "string",
            "description": "Customer Reference of the Service Point"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Point"
          },
          "reference": {
            "type": "string",
            "description": "Commercial Reference of the Service Point"
          }
        }
      },
      "Documentation": {
        "description": "Swagger of the API",
        "type": "object"
      },
      "Request_BVPNFrance_Delete": {
        "description": "Body for requesting of a BVPN disconnection (Manual Process).",
        "required": [
          "servicePoint"
        ],
        "type": "object",
        "properties": {
          "servicePoint": {
            "$ref": "#/components/schemas/ServicePoint"
          }
        }
      },
      "Request_BVPNFrance_DeleteA": {
        "description": "Body for requesting of a BVPN disconnection (Automatic Process).",
        "required": [
          "servicePoint"
        ],
        "type": "object",
        "properties": {
          "servicePoint": {
            "$ref": "#/components/schemas/ServicePoint"
          }
        }
      },
      "R_BVPN_S1": {
        "description": "This type of request allow to send a request of BVPN site disconnection.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Request_BVPNFrance_Delete"
              }
            }
          }
        ],
        "title": "Allow to request the termination of a BVPN site.",
        "x-internal": true
      },
      "R_BVPN_S1A": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Request_BVPNFrance_DeleteA"
              }
            }
          }
        ],
        "title": "Allow to request the termination of a BVPN site.",
        "description": "This type of request allow to send a request of BVPN site disconnection.\nThe requested Date must not be a week-end (Saturday/Sundy) and Public day.\nThe requested Data must be greater than 30 days. "
      },
      "C_GENERIC_S1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "type": "object",
            "description": "Information for a Generic Order (France Only) where the request is defined in an attached file.",
            "properties": {
              "properties": {
                "type": "object",
                "description": "Information for a Generic Order (France Only) where the request is defined in an attached file.",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Offer Domain of the the request.",
                    "enum": [
                      "DATA SUPPORT",
                      "INTERNET",
                      "CONVERGENT",
                      "INTERNATIONAL",
                      "RETURN WARRANT",
                      "CONTACT",
                      "OTHER",
                      "MANAGED_DATA",
                      "VOICE_OVER_IP",
                      "BUSINESS_INTERNET"
                    ]
                  },
                  "location": {
                    "$ref": "#/components/schemas/LocationOrder"
                  },
                  "requestedAt": {
                    "type": "string",
                    "format": "date",
                    "description": "The Customer installation wish date for the installation."
                  },
                  "offer": {
                    "type": "object",
                    "description": "Information on the Offer.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the offer, product or service relating to this request."
                      }
                    }
                  },
                  "billingAccount": {
                    "type": "object",
                    "description": "Information on the Billing Account of the Customer.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Orange Identifier of the Billing Account."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "C_GENERIC_S1",
        "description": "This request type 'Generic Order' allows to send any request thru an attached file. The format of the file must be agreed between the Customer & Orange. \nIf no attached file is present, an error will be returned."
      },
      "REQ_RIE_CREATE_BVPN_SITE": {
        "title": "C_EI_CATALOG",
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "integer"
                  },
                  "video": {
                    "type": "integer"
                  },
                  "GTR": {
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "billingAccount": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "subAccount": {
                        "type": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "customerReference": {
                        "type": "string"
                      },
                      "building": {
                        "type": "string"
                      },
                      "legalNumber": {
                        "type": "string"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string"
                          },
                          "extendedStreet": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "description": "",
        "x-internal": true
      },
      "REQ_RIE_UPDATE_BVPN_SITE": {
        "title": "U_EI_CATALOG",
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "integer"
                  },
                  "video": {
                    "type": "integer"
                  },
                  "GTR": {
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "billingAccount": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "subAccount": {
                        "type": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "customerReference": {
                        "type": "string"
                      },
                      "building": {
                        "type": "string"
                      },
                      "legalNumber": {
                        "type": "string"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string"
                          },
                          "extendedStreet": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "description": "",
        "x-internal": true
      },
      "REQ_EI_CREATE_BVPN_SITE": {
        "title": "C_EI_CATALOG",
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "string"
                  },
                  "video - copy": {
                    "type": "string"
                  },
                  "GTR": {
                    "type": "string"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "AVAILABILTY",
                        "PERFORMANCE",
                        "OTHER"
                      ]
                    }
                  },
                  "network": {
                    "type": "string"
                  },
                  "billingAccount": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "subAccount": {
                        "type": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "customerReference": {
                        "type": "string"
                      },
                      "building": {
                        "type": "string"
                      },
                      "legalNumber": {
                        "type": "string"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string"
                          },
                          "extendedStreet": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "description": "",
        "x-internal": true
      },
      "REQ_EI_UPDATE_BVPN_SITE": {
        "title": "U_EI_CATALOG",
        "allOf": [
          {
            "$ref": "#/components/schemas/RequestPOST"
          },
          {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string"
                  },
                  "video": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "string"
                  },
                  "GTR": {
                    "type": "string"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "AVAILABILTY",
                        "PERFORMANCE",
                        "OTHER"
                      ]
                    }
                  },
                  "network": {
                    "type": "string"
                  },
                  "billingAccount": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "subAccount": {
                        "type": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "customerReference": {
                        "type": "string"
                      },
                      "building": {
                        "type": "string"
                      },
                      "legalNumber": {
                        "type": "string"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string"
                          },
                          "extendedStreet": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "description": "",
        "x-internal": true
      },
      "Order": {
        "title": "Order",
        "type": "object",
        "description": "Information on an Order",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Order."
          },
          "customerReference": {
            "type": "string",
            "description": "Reference set by the Customer during the request process."
          },
          "customerPurchaseOrder": {
            "type": "string",
            "description": "Purchase Order number set by the Customer during the request process."
          },
          "complementaryCustomerPurchaseOrder": {
            "type": "string",
            "description": "Complementary Purchase order set by the Customer during the request process."
          },
          "secondaryCustomerReference": {
            "type": "string",
            "description": "Complementary information or reference set by the Customer during the request process."
          },
          "agreement": {
            "type": "object",
            "description": "Information on the Agreement.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Orange contract Identifier linked to this order."
              }
            }
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "step": {
            "type": "string",
            "description": "State of the Order",
            "enum": [
              "ORDER_INITIATION",
              "ORDER_DELIVERY",
              "ORDER_ACCEPTANCE",
              "UNKNOWN"
            ]
          },
          "category": {
            "type": "string",
            "description": "Type of the order. Example: CHANGE",
            "enum": [
              "NEW",
              "CHANGE",
              "DISCONNECT",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "subStep": {
            "type": "string",
            "description": "State of the Order",
            "enum": [
              "UNKOWN",
              "PENDING_APPROVAL",
              "LOCAL_VALIDATION",
              "IN_PROGRESS",
              "ACCEPTED",
              "COMPLETED"
            ],
            "example": "IN_PROGRESS"
          },
          "status": {
            "type": "string",
            "description": "Indicate the status of the order.",
            "enum": [
              "IN_PROGRESS",
              "CANCELLED",
              "NEW",
              "COMPLETED",
              "DRAFT",
              "EXPIRED",
              "REJECTED",
              "UNKNOWN",
              "AWAITING_CUSTOMER_ACTION"
            ]
          },
          "deliveryStatus": {
            "type": "string",
            "description": "Status on the delivery of the service.",
            "enum": [
              "ON_TRACK",
              "DELAYED",
              "ON_HOLD",
              "UNKNOWN"
            ]
          },
          "isArchived": {
            "type": "boolean",
            "description": "Indicates if the Order has been archived or not."
          },
          "quote": {
            "type": "object",
            "description": "Information on the quote having related to this Order",
            "properties": {
              "id": {
                "type": "string",
                "description": "Orange Single identifier of the accepted Quote."
              }
            }
          },
          "request": {
            "type": "object",
            "description": "Information on the Request having related to this Order.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Request Single identifier having initiated this Order."
              },
              "name": {
                "type": "string",
                "description": "Name of the Request having related to this Order."
              },
              "customerReference": {
                "type": "string",
                "description": "Customer Reference of the Request having related to this Order."
              }
            }
          },
          "servicePoint": {
            "type": "object",
            "description": "Information on the service point having related to this order",
            "properties": {
              "id": {
                "type": "string",
                "description": "Orange Single identifier od the Service Point"
              },
              "name": {
                "type": "string",
                "description": "Name of the Service Point"
              },
              "customerReference": {
                "type": "string",
                "description": "Customer Reference of the Service Point"
              }
            }
          },
          "keyDates": {
            "type": "object",
            "description": "Contains all dates about the order.",
            "properties": {
              "issuedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the Order was issued. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "requestedAt": {
                "type": "string",
                "format": "date",
                "description": "Delivery date requested by the customer. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "expectedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the Order was expected. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "customerSignedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the order was signed. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "validatedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the order was validated. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "inHouseWiringCompletedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the wiring was done. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "equipmentOrderedAt": {
                "type": "string",
                "description": "Date when the equipment was ordered. Use \"YYYY-MM-DD\" format Example: 2018-04-18.",
                "format": "date"
              },
              "equipmentDeliveredAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the equipment was delivered. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "circuitOrderedAt": {
                "type": "string",
                "description": "Date when the circuit was ordered. Use \"YYYY-MM-DD\" format Example: 2018-04-18.",
                "format": "date"
              },
              "circuitDeliveredAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the circuit was delivered. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "hardwareInstallationPlannedAt": {
                "type": "string",
                "description": "Scheduled date for hardware installation. Use \"YYYY-MM-DD\" format Example: 2018-04-18",
                "format": "date"
              },
              "billingStartedAt": {
                "type": "string",
                "description": "Date when the billing was started. Use \"YYYY-MM-DD\" format Example: 2018-04-18.",
                "format": "date"
              },
              "billingStoppedAt": {
                "type": "string",
                "description": "Date when the billing was stopped. Use \"YYYY-MM-DD\" format Example: 2018-04-18.",
                "format": "date"
              },
              "activatedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the order was activated. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "informationSentAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the information was sent. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "disconnectedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the order was disconnected. Use \"YYYY-MM-DD\" format Example: 2018-04-18"
              },
              "disconnectionRequestedAt": {
                "type": "string",
                "format": "date",
                "description": "Disconnection date requested by the customer. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "deliveryRequestedAt": {
                "type": "string",
                "format": "date",
                "description": "Order Delivery Date requested by the customer. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "orderValidatedAt": {
                "type": "string",
                "description": "Date when the Order has been validated by Orange.  Use \"YYYY-MM-DD\" format Example: 2018-04-18.",
                "format": "date"
              },
              "cancelledAt": {
                "type": "string",
                "format": "date-time",
                "description": "Date when the order was cancelled. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              },
              "completedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Date when the order was completed. Use \"YYYY-MM-DD\" format Example: 2018-04-18."
              }
            }
          },
          "primaryContact": {
            "$ref": "#/components/schemas/PrimaryIndividual"
          },
          "secondaryContact": {
            "$ref": "#/components/schemas/SecondaryIndividual"
          },
          "requester": {
            "$ref": "#/components/schemas/Requester"
          },
          "billingAccounts": {
            "type": "array",
            "description": "List of Billing accounts used for the order.",
            "items": {}
          },
          "comment": {
            "type": "string",
            "description": "Comment on the order set by the Customer."
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "isOverdue": {
            "type": "boolean",
            "description": "Flag indicating is the order is On track or Delayed."
          },
          "type": {
            "type": "string",
            "description": "Type of the Order, following this value, properties will change."
          },
          "properties": {
            "type": "object",
            "description": "Information of the Ordered Service. The format will depend of the _type_ attribute.",
            "properties": {
              "offer": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          "attachments": {
            "type": "array",
            "description": "List of Attachments associated to this Order. By default, this attribute is not in the default response, you must specified it thru the _includes_ Query Paramter.",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "notes": {
            "type": "array",
            "description": "List of Notes associated to this Order. By default, this attribute is not in the default response, you must specified it thru the _includes_ Query Paramter.",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "steps": {
            "type": "array",
            "description": "List of Steps associated to this Order. By default, this attribute is not in the default response, you must specified it thru the _includes_ Query Paramter.",
            "items": {
              "$ref": "#/components/schemas/Step"
            }
          },
          "_links": {
            "type": "object",
            "description": "HATEOS links on the nested resources.",
            "properties": {
              "self": {
                "type": "object",
                "description": "Method Information for having details of the Order.",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI on the current item"
                  }
                }
              },
              "request": {
                "type": "object",
                "description": "Method Information for having details of the Request associated to the Order.",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI on the Project."
                  }
                }
              },
              "quote": {
                "type": "object",
                "description": "Method Information for having details of the Quote associated to the Order.",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI on the Quote."
                  }
                }
              }
            }
          }
        }
      },
      "Quote": {
        "title": "Quote",
        "type": "object",
        "description": "List of Quotes submitted by Orange for the current Request. This information is only available for International Market.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identigier "
          },
          "name": {
            "type": "string",
            "description": "Name of the Quote."
          },
          "status": {
            "type": "string",
            "description": "Status of the Quote.",
            "enum": [
              "NEW",
              "REJECTED",
              "VALIDATED"
            ]
          },
          "attachment": {
            "type": "object",
            "description": "Information on the Attachement.",
            "properties": {
              "name": {
                "type": "string",
                "description": "fileName of the Attachement."
              },
              "format": {
                "type": "string",
                "description": "Format of the file. it is a Mine format such as _application/pdf_."
              },
              "href": {
                "type": "string",
                "description": "Url for downloading the attachment."
              },
              "content": {
                "type": "string",
                "description": "Content of the Quote in PDF format. The file is enconded in Base64."
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          }
        }
      },
      "Attachment": {
        "title": "Attachment",
        "type": "object",
        "description": "List of Attachments associated to the request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Attachment."
          },
          "name": {
            "type": "string",
            "description": "Name of the attachment."
          },
          "content": {
            "type": "string",
            "description": "Content of the attachment in Base64 format."
          },
          "format": {
            "type": "string",
            "description": "Format of the Attachment. It is a mime format such as _application/pdf_. This value is just an information for faciliting the file management."
          },
          "href": {
            "type": "string",
            "description": "URL for downloading the file."
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          }
        }
      },
      "Step": {
        "title": "Step",
        "type": "object",
        "description": "Step of the deployment of an Order.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Step"
          },
          "name": {
            "type": "string",
            "description": "Name of the Step"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED",
              "UNKNOWN"
            ],
            "description": "Status of the Step"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_"
          }
        }
      },
      "Reports": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Report"
          },
          "name": {
            "type": "string",
            "description": "Name of the Report."
          },
          "format": {
            "type": "string",
            "description": "Mime Type of the Report. _Example : text/csv_. \nThis value is only for informaton for facilitating the donwload of the file."
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "category": {
            "type": "string",
            "description": "Category of the Report."
          },
          "href": {
            "type": "string",
            "description": "URL on the file to download."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update of the item for efficient data synchronisation. There is no Business meaning. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
          }
        },
        "description": "Information on the Report.",
        "title": "Reports"
      }
    }
  }
}