{
  "openapi": "3.0.0",
  "info": {
    "description": "The Network API allows to provide a clear visibility on the deployed Network solutions and Equipements. This API provides the full inventory, QoS and usage reports.  \nMost of Network Offers are supported.\n  \n\n### Internationalization\nBy default, data are in English but you can request data in French by specifying a language code in the Accept-Language header.\n_Example: Accept-Language: fr_\n\n### Resources \n- **accessLines** : An Access Line (or Circuit) is the physical line supporting the service such as Optical Fiber or DSL.\n- **devices** : A device is an equipement of the WAN or LAN network for example a Router. Devices can be also virtual.\n- **interfaces** : An Interface is a physical port of a device.\n- **locations** : A location is a Geographical place like a building.\n- **pointOfPresences** : Point of Presence is a Orangecenter containing Network Equipments.\n- **servicePoints** : Service Point is an installed Offer such as a BVPN site. You will find Commercial information on this object.\n\n\n### Scopes\n\n| Scope | Features |\n| --- | --- |\n| b2b:network| Full access of the API. |\n| b2b:network:readonly | API limited to read actions |  \n\n\n# Authentication\n\nThe authentication is based on OAuth 2.0 and and API Key provided by Orange Business Services",
    "version": "2.0.2",
    "title": "Network",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/obs-api/swaggers/main/assets/logo.png",
      "backgroundColor": "#FFFFFF"
    },
    "contact": {
      "name": "Philippe VALETTE",
      "url": "http://developer.orange.com",
      "email": "philippe.valette@orange.com"
    }
  },
  "tags": [
    {
      "name": "Access Lines",
      "description": "An Access Lines is a connectivity link between a WAN device and a Point of Presence (MPLS, Internet..)"
    },
    {
      "name": "Devices",
      "description": "Physical or virtual Network equipments such Routers, Switches, vEdge, Cloud vEdge or uCPE"
    },
    {
      "name": "Device Interfaces",
      "description": "##overview The interfaces on a router provide network connectivity to the router. Physical & Virtual interfaces of a vEdge"
    },
    {
      "name": "Locations",
      "description": "A Location is a geographical place where the service, equipments is installed. The method lists mainly Customer premises. "
    },
    {
      "name": "Service Points",
      "description": "The service Point corresponds to an Installed Service. The item will provide commercial informations."
    },
    {
      "name": "Points Of Presence",
      "description": "Operator nodes for connecting Customer Equipments"
    },
    {
      "name": "Miscellaneous",
      "description": "Methods for having information on the API such as the version, status or for downloading the Swagger."
    }
  ],
  "paths": {
    "/accessLines": {
      "get": {
        "tags": [
          "Access Lines"
        ],
        "operationId": "ListAccessLines",
        "summary": "Find WAN Access Lines",
        "description": "This method allows to list all Access Lines or Circuits matching criterias.",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of Access Lines to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "maximum": 250,
              "minimum": 0
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign indicates a descending order. __Example: sort=-name",
            "schema": {
              "$ref": "#/components/schemas/AccessLineSort"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma.",
            "schema": {
              "$ref": "#/components/schemas/AccessLineFields"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Single Identifier. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Returns Access Lines that match the exact value or formula about the Device Name.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula faboutthe Customer Single Identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Customer Name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact vavalue or formula about the Access Line Type.",
            "schema": {
              "$ref": "#/components/schemas/AccessLineType"
            }
          },
          {
            "name": "properties.role",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Topology Role.",
            "schema": {
              "$ref": "#/components/schemas/AccessLineRole"
            }
          },
          {
            "name": "carrier.id",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Single Identifier of the Access Line Carrier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "carrier.name",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Name of the Access Line Carrier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device.id",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Single Identifier of the Device where the Access Line is connected.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device.name",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Name of the Device where the Access Line is connected.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device.customerReference",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Customer Reference of the Device where the Access Line is connected.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Provisioning state (limited number of values).",
            "schema": {
              "$ref": "#/components/schemas/AccessLineState"
            }
          },
          {
            "name": "servicePoints.id",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Single identifier of the Service Point linked to the Access Line.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoints.name",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Name of the Service Point linked to the Access Line.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoints.customerReference",
            "required": false,
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Customer Reference of the Service Point linked to the Access Line.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "keyDates.activatedAt",
            "description": "Returns Access Lines that match the exact value or formula about the date whe then Access Line has been activated by the Carrier.",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            }
          },
          {
            "schema": {
              "type": "string",
              "example": "2021-01-01",
              "format": "date"
            },
            "in": "query",
            "name": "keyDates.startedAt",
            "description": "Returns Access Lines that match the exact value or formula about the date when the Access Line was Ready for Service."
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "in": "query",
            "name": "keyDates.billingStartedAt",
            "description": "Returns Access Lines that match the exact value or formula about the date when the billing of the Access Line started."
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "in": "query",
            "name": "keyDates.billingEndedAt",
            "description": "Returns Access Lines that match the exact value or formula about the date when the billing of the Access Line stopped after a disconnection."
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "in": "query",
            "name": "keyDates.terminatedAt",
            "description": "Returns Access Lines that match the exact value or formula about the date when the Access Line was disconnected."
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "in": "query",
            "name": "keyDates.orderedAt",
            "description": "Returns Access Lines that match the exact value or formula about the date when the Access Line has been ordered."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "location.id",
            "description": "Returns Access Lines that match the exact value or formula about the Single Identifier of the Location where the Access Line was deployed."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "location.name",
            "description": "Returns Access Lines that match the exact value or formula about the Name of the Location where the Access Line was deployed."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Customer Reference of the Location where the Access Line was deployed.",
            "name": "location.customerReference"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "location.address.city",
            "description": "Returns Access Lines that match the exact value or formula about the City of the Location where the Access Line was deployed."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Country Code of the Location where the Access Line was deployed. The code follow the [ISO-3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1) specifications.",
            "name": "location.address.country"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierReference",
            "description": "Returns Access Lines that match the exact value or formula about the reference of Access Line Carrier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierSecondaryReference",
            "description": "Returns Access Lines that match the exact value or formula about the additional reference of Access Line Carrier."
          },
          {
            "name": "customerReference",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Customer Reference of Access Line."
          },
          {
            "name": "offer.id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Single Identifier of offer associated to the Access Line."
          },
          {
            "name": "offer.name",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Returns Access Lines that match the exact value or formula about the Name of offer associated to the Access Line."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Returns Access Lines that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Returns Access Lines that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "description": "The total number of items matching criterias.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "description": "The actual number of items returned in the response body.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessLine"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/accessLines/aggregate": {
      "get": {
        "summary": "Aggregate Access Lines",
        "tags": [
          "Access Lines"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of indicators."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregateAccessLines",
        "description": "This method allows to count Access Lines items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /accessLines/aggregate?groupBy=state`\n\nwill returns\n\n`\n{\n   'INSTALLING': 5,\n   'OPERATIONAL' : 10,\n   'TERMINATED' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /requests/aggregate?groupBy=status,offer.family`",
        "parameters": [
          {
            "name": "groupBy",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "List of attributes to aggregate."
          },
          {
            "name": "X-API-KEY",
            "schema": {
              "type": "string"
            },
            "in": "header",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Single Identifier."
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Device Name."
          },
          {
            "name": "customerReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Customer Reference."
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula faboutthe Customer Single Identifier."
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula faboutthe Customer Single Identifier."
          },
          {
            "name": "type",
            "schema": {
              "$ref": "#/components/schemas/AccessLineType"
            },
            "in": "query",
            "description": "Aggregates  Access Lines that match the exact vavalue or formula about the Access Line Type."
          },
          {
            "name": "properties.role",
            "required": false,
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Topology Role.",
            "schema": {
              "$ref": "#/components/schemas/AccessLineRole"
            }
          },
          {
            "name": "carrier.id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Single Identifier of the Access Line Carrier."
          },
          {
            "name": "carrier.name",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Name of the Access Line Carrier."
          },
          {
            "name": "device.id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Single Identifier of the Device where the Access Line is connected."
          },
          {
            "name": "device.name",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Name of the Device where the Access Line is connected."
          },
          {
            "name": "device.customerReference",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Customer Reference of the Device where the Access Line is connected."
          },
          {
            "name": "state",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AccessLineState"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Provisioning state (limited number of values)."
          },
          {
            "name": "servicePoint.id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Single identifier of the Service Point linked to the Access Line."
          },
          {
            "name": "servicePoint.name",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Name of the Service Point linked to the Access Line."
          },
          {
            "name": "servicePoint.customerReference",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Customer Reference of the Service Point linked to the Access Line."
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "in": "query",
            "name": "keyDates.activatedAt",
            "description": "Aggregates Access Lines that match the exact value or formula about the date whe then Access Line has been activated by the Carrier."
          },
          {
            "name": "keyDates.startedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the date when the Access Line was Ready for Service."
          },
          {
            "name": "keyDates.billingStartedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the date when the billing of the Access Line started."
          },
          {
            "name": "keyDates.billingEndedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the date when the billing of the Access Line stopped after a disconnection."
          },
          {
            "name": "keyDates.terminatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the date when the Access Line was disconnected."
          },
          {
            "name": "keyDates.orderedAt",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the date when the Access Line has been ordered."
          },
          {
            "name": "location.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Single Identifier of the Location where the Access Line was deployed."
          },
          {
            "name": "location.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Name of the Location where the Access Line was deployed."
          },
          {
            "name": "location.customerReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Customer Reference of the Location where the Access Line was deployed."
          },
          {
            "name": "location.address.city",
            "schema": {
              "type": "string",
              "example": "Lyon"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the City of the Location where the Access Line was deployed."
          },
          {
            "name": "location.address.country",
            "schema": {
              "type": "string",
              "example": "FR"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the Country Code of the Location where the Access Line was deployed. The code follow the [ISO-3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1) specifications."
          },
          {
            "name": "carrierReference",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the reference of Access Line Carrier."
          },
          {
            "name": "carrierSecondaryReference",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Aggregates Access Lines that match the exact value or formula about the additional reference of Access Line Carrier."
          },
          {
            "name": "offer.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Single Identifier of offer associated to the Access Line."
          },
          {
            "name": "offer.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Access Lines that match the exact value or formula about the Name of offer associated to the Access Line."
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "description": "Returns Access Lines that match the exact value or formula about the creation date of Access Line in API ecosystem."
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "description": "Returns Access Lines that match the exact value or formula about the last update date of Access Line in API ecosystem."
          },
          {
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "key",
                "value"
              ]
            },
            "in": "query",
            "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign indicates a descending order. __Example: sort=-key"
          }
        ]
      }
    },
    "/accessLines/{accessLineId}": {
      "get": {
        "tags": [
          "Access Lines"
        ],
        "operationId": "GetAccessLines",
        "summary": "Get  details of a WAN circuits",
        "description": "This method allow to get all available information on an Access Line.",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessLineId",
            "required": true,
            "description": "Single Identifier of the Access Line.",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma.",
            "schema": {
              "$ref": "#/components/schemas/AccessLineFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "FindtDevices",
        "summary": "Retrieve Network Devices",
        "description": "This end-point returns a list of devices by default sorted by the id.\nThe number of returned items is by default 25 but it can be changed with query parameters.\n\n----------",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 250,
              "default": 50
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign will indicate a descending \\sorder.\n__Example: sort=-name",
            "schema": {
              "$ref": "#/components/schemas/DeviceSort"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The list of field names to retrieve. You can specify a field, a resource or a resource’s field.\\s\n__Example: fields=name,status",
            "schema": {
              "$ref": "#/components/schemas/DeviceFields"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Devices that match the exact value or formula about the Single Identifier of the Device."
          },
          {
            "name": "name",
            "required": false,
            "description": "Returns Devices that match the exact value or formula about the Orange Name of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReference",
            "required": false,
            "description": "Returns Devices that match the exact value or formula about the Customer Reference of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Single Identifier of the Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Name of the Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Type of the Device.",
            "schema": {
              "$ref": "#/components/schemas/DeviceType"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/DeviceCategory"
            },
            "in": "query",
            "name": "category",
            "description": "Returns Devices that match the exact value or formula about the Category of the Device."
          },
          {
            "name": "isVirtual",
            "required": false,
            "in": "query",
            "description": "Returns Devices that are virtual (_isVirtual=true_) or physical (_isVirtual=false_).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "state",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Provisioning State of the Device.",
            "schema": {
              "$ref": "#/components/schemas/DeviceState"
            }
          },
          {
            "name": "location.id",
            "required": false,
            "description": "Returns Devices that match the exact value or formula about the Orange Single Identifier of the Location where the Device has been deployed.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.name",
            "required": false,
            "description": "Returns Devices that match the exact value or formula about the Orange Name of the Location where the Device has been deployed.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.address.postalCode",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Orange Postal Code of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.customerReference",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Customer Reference of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.address.city",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the City of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.address.country",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Country Code of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.id",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Orange Single Identifier of the Offer associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.name",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Orange Name of the Offer associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "community",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Network community of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.model",
            "required": false,
            "description": "Returns Devices that match the exact value or formula about the Model of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.family",
            "required": false,
            "description": "Returns Devices that match the exact value or formula about the Product Family of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.chassis",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Chassis reference of the Device as indicated thru Device Console.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.manufacturer",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Manufacturer Name of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.serialNumber",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Serial Number of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoint.id",
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Single Identifier of Service Point associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoint.name",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Name of Service Point associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoint.customerReference",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Customer Reference of Service Point associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.role",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Topology role of the Device (Limited Number of Values).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.isCascaded",
            "required": false,
            "in": "query",
            "description": "Returns Devices that are Cascaded (_isCascaded=true_) or not Cascaded (_iscascaded=)false_).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "topology.mplsUnderlaySiteName",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the MPLS Site Name of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.mplsUnderlaySiteType",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the MPLS Site Type of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.layer",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Topology Layer of the Device (Limited Number of Values).",
            "schema": {
              "$ref": "#/components/schemas/DeviceTopologyLayer"
            }
          },
          {
            "name": "settings.function",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the Function of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyDates.startedAt",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the date when the Access Line was Ready for Service.",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-01-01"
            }
          },
          {
            "name": "keyDates.discoveredAt",
            "required": false,
            "in": "query",
            "description": "Returns Devices that match the exact value or formula about the last discovered date of the Device by Orange Probes.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Returns Devices that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Returns Devices that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "includes",
            "required": false,
            "in": "query",
            "description": "Includes additional items in the response (Limited number of values). Several values can be specified with a comma for sepating values.",
            "schema": {
              "$ref": "#/components/schemas/DeviceIncludes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "description": "The total number of items matching criterias.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "description": "The actual number of items returned in the response body.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/devices/aggregate": {
      "get": {
        "summary": "Aggregate Devices",
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Indicators after the aggregation.",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregateDevice",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupBy",
            "description": "List of attributes to aggregate Devices"
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Devices that match the exact value or formula about the Single Identifier of the Device."
          },
          {
            "name": "name",
            "required": false,
            "description": "Aggregates Devices that match the exact value or formula about the Orange Name of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReference",
            "required": false,
            "description": "Aggregates Devices that match the exact value or formula about the Customer Reference of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Single Identifier of the Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Name of the Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Type of the Device.",
            "schema": {
              "$ref": "#/components/schemas/DeviceType"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/DeviceCategory"
            },
            "in": "query",
            "name": "category",
            "description": "Aggregates Devices that match the exact value or formula about the Category of the Device."
          },
          {
            "name": "isVirtual",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that are virtual (_isVirtual=true_) or physical (_isVirtual=false_).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "state",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Provisioning State of the Device.",
            "schema": {
              "$ref": "#/components/schemas/DeviceState"
            }
          },
          {
            "name": "location.id",
            "required": false,
            "description": "Aggregates Devices that match the exact value or formula about the Orange Single Identifier of the Location where the Device has been deployed.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.name",
            "required": false,
            "description": "Aggregates Devices that match the exact value or formula about the Orange Name of the Location where the Device has been deployed.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.customerReference",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Orange Postal Code of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.address.city",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Customer Reference of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.address.postalCode",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Postal Code of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.address.country",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Country Code of the Location where the Device has been deployed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.id",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Orange Single Identifier of the Offer associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer.name",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Orange Name of the Offer associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "community",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Network community of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.model",
            "required": false,
            "description": "Aggregates Devices that match the exact value or formula about the Model of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.family",
            "required": false,
            "description": "Aggregates Devices that match the exact value or formula about the Product Family of the Device.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.chassis",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Chassis reference of the Device as indicated thru Device Console.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.manufacturer",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Manufacturer Name of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardware.serialNumber",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Serial Number of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoint.id",
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Single Identifier of Service Point associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoint.name",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Name of Service Point associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePoint.customerReference",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Customer Reference of Service Point associated to the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.role",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Topology role of the Device (Limited Number of Values).",
            "schema": {
              "$ref": "#/components/schemas/DeviceTopologyRole"
            }
          },
          {
            "name": "topology.isCascaded",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that are Cascaded (_isCascaded=true_) or not Cascaded (_iscascaded=)false_).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "topology.mplsUnderlaySiteName",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the MPLS Site Name of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.mplsUnderlaySiteType",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the MPLS Site Type of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topology.layer",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Topology Layer of the Device (Limited Number of Values).",
            "schema": {
              "$ref": "#/components/schemas/DeviceTopologyLayer"
            }
          },
          {
            "name": "settings.function",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the Function of the Device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyDates.startedAt",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the date when the Access Line was Ready for Service.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "keyDates.discoveredAt",
            "required": false,
            "in": "query",
            "description": "Aggregates Devices that match the exact value or formula about the last discovered date of the Device by Orange Probes.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            }
          },
          {
            "name": "includes",
            "required": false,
            "in": "query",
            "description": "Includes additional items",
            "schema": {
              "$ref": "#/components/schemas/DeviceIncludes"
            }
          }
        ],
        "description": "This method allows to count Access Lines items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /accessLines/aggregate?groupBy=state`\n\nwill returns\n\n`\n{\n   'INSTALLING': 5,\n   'OPERATIONAL' : 10,\n   'TERMINATED' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /requests/aggregate?groupBy=status,offer.family`"
      }
    },
    "/devices/{deviceId}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "GetDevice",
        "summary": "Get details of a Device",
        "description": "Returns all available information about the device.\n\n----------",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "description": "Orange Single Identifier of the device",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma.\n__Example: fields=name,status_",
            "schema": {
              "$ref": "#/components/schemas/DeviceFields"
            }
          },
          {
            "name": "includes",
            "required": false,
            "in": "query",
            "description": "Indicates a list of sub resource to include in the response. Names are separated by a comma",
            "schema": {
              "$ref": "#/components/schemas/DeviceIncludes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/devices/{deviceId}/interfaces": {
      "get": {
        "tags": [
          "Device Interfaces"
        ],
        "operationId": "FindDeviceInterfaces",
        "summary": "Retrieve interfaces of a device",
        "description": "This end-point returns a list of interfaces of a device sorted by the name.\nThe number of returned items is by default 20 but it can be changed with query parameters.\n\n----------",
        "deprecated": false,
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "description": "Orange Single Identifier of a network device.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "maximum": 250,
              "minimum": 0
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "The comma-separated list of field names to sort the result. Prefixing a field name with a \"-\" sign will indicate a descending order.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The list of field names to retrieve.  You can specify a field, a resource or a resource's field.\n_Example: &fields=reference,status,type,primaryContact.name_",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "*** filter not implemted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "*** filter not implemted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "protocol",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slot",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adapter",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "port",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mtu",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hardwareAddress",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLogical",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bandwidth",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seenAt",
            "required": false,
            "in": "query",
            "description": "*** filter not implemted",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            }
          },
          {
            "name": "ipAddressing.ipV4",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string",
              "example": "2021-01-01T12:00:00Z"
            }
          },
          {
            "name": "ipV4",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "usage",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vlanId",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vrf",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "physicalInterface.id",
            "required": false,
            "in": "query",
            "description": "**This filter is not implemented**",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "description": "The total number of items matching criterias.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "description": "The actual number of items returned in the response body.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceInterface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "operationId": "ListLocations",
        "summary": "Retrieve the list of locations",
        "description": "Retrieve the list of locations",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The maximum number of Locations to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "maximum": 250,
              "minimum": 0
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign will indicate a descending order. __Example: sort=-name",
            "schema": {
              "$ref": "#/components/schemas/LocationSort"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The list of field names to retrieve. You can specify a field, a resource or a resource’s field. __Example: fields=name,status",
            "schema": {
              "$ref": "#/components/schemas/LocationFields"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Single Identifier of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Name of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReference",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Customer Reference of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.postalCode",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Postal Code of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.state",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the State of the Location (Only for US).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.locality",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the locality of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.city",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the name the city.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.country",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the country code of the Location. The code follow the [ISO-3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1) specifications",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Single Identifier of Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Name of Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Type of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "building",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Building Name of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "localCompany",
            "required": false,
            "in": "query",
            "description": "Returns Locations that match the exact value or formula about the Local Company Name of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Returns Locations that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Returns Locations that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "description": "The total number of items matching criterias.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "description": "The actual number of items returned in the response body.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/locations/aggregate": {
      "get": {
        "summary": "Aggregate Locations",
        "tags": [
          "Locations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of indicators."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregateLocations",
        "description": "This method allows to count Service Points items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /servicePoints/aggregate?groupBy=state`\n\nwill returns\n\n`\n{\n   'INSTALLING': 5,\n   'OPERATIONAL' : 10,\n   'TERMINATED' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /servicePoints/aggregate?groupBy=status,offer.family`",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "List of attributes to aggregate",
            "name": "groupBy"
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Single Identifier of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Name of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReference",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Customer Reference of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.postalCode",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Postal Code of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.state",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the State of the Location (Only for US).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.locality",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the locality of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.city",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the name the city.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.country",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the country code of the Location. The code follow the [ISO-3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1) specifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Single Identifier of Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Name of Customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Type of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "building",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Building Name of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "localCompany",
            "required": false,
            "in": "query",
            "description": "Aggregates Locations that match the exact value or formula about the Local Company Name of the Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAt",
            "description": "Aggregates Locations that match the exact value or formula about the creation date of Access Line in API ecosystem."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "in": "query",
            "name": "updatedAt",
            "description": "Aggregates Locations that match the exact value or formula about the last update date of Access Line in API ecosystem."
          }
        ]
      }
    },
    "/locations/{locationId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "operationId": "GetLocation",
        "summary": "Get Details of a location",
        "description": "Get Details of a location",
        "deprecated": false,
        "parameters": [
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "description": "Orange Single Identifier of a location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The list of field names to retrieve. You can specify a field, a resource or a resource’s field. __Example: fields=name,status",
            "schema": {
              "$ref": "#/components/schemas/LocationFields"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/servicePoints": {
      "get": {
        "tags": [
          "Service Points"
        ],
        "operationId": "ListServicePoints",
        "summary": "Retrieve all Service Points",
        "description": "Retrieve all Service Points",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25,
              "maximum": 250,
              "minimum": 0
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ServicePointSort"
            },
            "description": "Return items in the specified order, can be on attribute or a list of attributes separated by a comma. By default by the updatedAt attribute. Descending order is indicated via a prefix '-'."
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ServicePointFields"
            },
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma."
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Single Identifier of the Service Point."
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Name of the Service Point."
          },
          {
            "name": "customerReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Customer Reference of the Service Point."
          },
          {
            "name": "state",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Provisioning State of the Service Point. (Limited number of values)"
          },
          {
            "name": "offer.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Single Identifier of Offer associated to the Service Point."
          },
          {
            "name": "offer.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Name of Offer associated to the Service Point."
          },
          {
            "name": "keyDates.orderedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Returns Service Points that match the exact value or formula about the date when the Service has been ordered."
          },
          {
            "name": "keyDates.billingStartedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Returns Service Points that match the exact value or formula about the date when the billing of the Service started."
          },
          {
            "name": "keyDates.billingEndedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Returns Service Points that match the exact value or formula about the date when the billing of the Service stopped after a disconnection."
          },
          {
            "name": "keyDates.startedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Returns Service Points that match the exact value or formula about the date when the Service was announced Ready for Service."
          },
          {
            "name": "keyDates.terminatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Returns Service Points that match the exact value or formula about the date when the Service ended."
          },
          {
            "name": "billingAccount.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Single Identifier of the Billing Account."
          },
          {
            "name": "agreement.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Single Identifier of the Agreement."
          },
          {
            "name": "location.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Single Identifier of the Location where the Service is deployed."
          },
          {
            "name": "location.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Name of the Location where the Service is deployed."
          },
          {
            "name": "location.customerReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Customer Reference of the Location where the Service is deployed."
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Single Identifier of the Customer."
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Service Points that match the exact value or formula about the Name of the Customer."
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Returns Locations that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Returns Locations that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "includes",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ServicePointIncludes"
            },
            "description": "Add depends items of the current item. List of attributes separated by a comma. "
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "description": "The total number of items matching criterias.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "description": "The actual number of items returned in the response body.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePoint"
                  }
                },
                "examples": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/servicePoints/{servicePointId}": {
      "get": {
        "tags": [
          "Service Points"
        ],
        "operationId": "GetServicePoint",
        "summary": "Get Details of a Service Point",
        "description": "Get Details of a Service Point",
        "deprecated": false,
        "parameters": [
          {
            "name": "servicePointId",
            "required": true,
            "in": "path",
            "description": "Orange Single Identifier of a Service Point",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "description": "The list of field names to retrieve. You can specify a field, a resource or a resource’s field. __Example: fields=name,status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ServicePointFields"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false,
              "enum": [
                false,
                true
              ]
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false,
              "enum": [
                false,
                true
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {},
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePoint"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/servicePoints/aggregate": {
      "get": {
        "summary": "Aggegate Service Points",
        "tags": [
          "Service Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of indicators."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregrateServicePoint",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "name": "X-API-KEY"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupBy",
            "required": true,
            "description": "List of attributes to aggregate Service Points"
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Single Identifier of the Service Point."
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Name of the Service Point."
          },
          {
            "name": "customerReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Customer Reference of the Service Point."
          },
          {
            "name": "state",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Provisioning State of the Service Point. (Limited number of values)."
          },
          {
            "name": "offer.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Single Identifier of Offer associated to the Service Point."
          },
          {
            "name": "offer.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Name of Offer associated to the Service Point."
          },
          {
            "name": "keyDates.orderedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the date when the Service has been ordered."
          },
          {
            "name": "keyDates.billingStartedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the date when the billing of the Service started."
          },
          {
            "name": "keyDates.billingEndedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the date when the billing of the Service stopped after a disconnection."
          },
          {
            "name": "keyDates.startedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the date when the Service was announced Ready for Service."
          },
          {
            "name": "keyDates.terminatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the date when the Service ended."
          },
          {
            "name": "billingAccount.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Single Identifier of the Billing Account."
          },
          {
            "name": "agreement.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Single Identifier of the Agreement."
          },
          {
            "name": "location.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Single Identifier of the Location where the Service is deployed."
          },
          {
            "name": "location.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Name of the Location where the Service is deployed."
          },
          {
            "name": "location.customerReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Customer Reference of the Location where the Service is deployed."
          },
          {
            "name": "customer.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Single Identifier of the Customer."
          },
          {
            "name": "customer.name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the Name of the Customer."
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T12:00:00Z"
            },
            "description": "Aggregates Service Points that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism."
          }
        ],
        "description": "This method allows to count Service Points items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /servicePoints/aggregate?groupBy=state`\n\nwill returns\n\n`\n{\n   'INSTALLING': 5,\n   'OPERATIONAL' : 10,\n   'TERMINATED' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /servicePoints/aggregate?groupBy=status,offer.family`"
      }
    },
    "/pointOfPresences": {
      "get": {
        "tags": [
          "Points Of Presence"
        ],
        "operationId": "FindPointOfPresences",
        "summary": "Retrieve the list of all Points Of Presence",
        "description": "Retrieve the list of all Points Of Presence",
        "deprecated": false,
        "parameters": [
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The index of the first element to retrieve. Zero is the first item of the collection.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The maximum number of items to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "maximum": 250,
              "minimum": 0
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "The field name to sort the result. Prefixing a field name with a \"-\" sign will indicate a descending order. __Example: sort=-name",
            "schema": {
              "$ref": "#/components/schemas/PointOfPresenceSort"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma.",
            "schema": {
              "$ref": "#/components/schemas/PointOfPresenceFields"
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the Single Identifier of the Point Of Presence.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "description": "Returns Point Of Presences that match the exact value or formula about the Name of the Point Of Presence.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.city",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the city where the Point Of Presence is located.",
            "schema": {
              "type": "string",
              "example": "London"
            }
          },
          {
            "name": "location.country",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the country where the Point Of Presence is located.",
            "schema": {
              "type": "string",
              "example": "UK"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "description": "Returns Point Of Presences that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items matching criterias.",
                "schema": {
                  "description": "The total number of items matching criterias.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Result-Count": {
                "description": "The actual number of items returned in the response body.",
                "schema": {
                  "description": "The actual number of items returned in the response body.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PointOfPresences"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/pointOfPresences/aggregate": {
      "get": {
        "summary": "Aggregate Points of Presence",
        "tags": [
          "Points Of Presence"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Indicators further the aggregation.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "AggregatePointOfPresence",
        "description": "This method allows to count _Point Of Presence_ items futher one or several attributes and matching criterias.\n\nThis feature is useful for building dashboards.\n\nFor example, the call `GET /pointOfPresences/aggregate?groupBy=state`\n\nwill returns\n\n`\n{\n   'INSTALLING': 5,\n   'OPERATIONAL' : 10,\n   'TERMINATED' : 2\n}\n`\n\nThe _groupBy_ Query Parameter supports several attributes ex:  ` GET /pointOfPresences/aggregate?groupBy=status,offer.family`",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-API-KEY",
            "description": "The API Key required for using Orange Business Services API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupBy",
            "description": "List of attributes to aggregate"
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the Single Identifier of the Point Of Presence.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "description": "Returns Point Of Presences that match the exact value or formula about the Name of the Point Of Presence.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.city",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the city where the Point Of Presence is located.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.country",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the country where the Point Of Presence is located.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "description": "Returns Point Of Presences that match the exact value or formula about the creation date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Returns Point Of Presences that match the exact value or formula about the last update date of Access Line in API ecosystem. This filter allows more efficient synchronization mechanism.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ]
      }
    },
    "/pointOfPresences/{pointOfPresenceId}": {
      "get": {
        "tags": [
          "Points Of Presence"
        ],
        "operationId": "GetPointOfPresence",
        "summary": "Return all information of a Point Of Service",
        "description": "Return all information of a Point Of Service",
        "deprecated": false,
        "parameters": [
          {
            "name": "pointOfPresenceId",
            "required": true,
            "in": "path",
            "description": "Orange Single Identifier of a Point of Service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-KEY",
            "required": false,
            "in": "header",
            "description": "The API Key required for using Orange Business Services API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "description": "Allow to reduce the response by specifying only necessary fields. Attributes are separated by a comma.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PointOfPresenceFields"
            }
          },
          {
            "name": "displayLinks",
            "required": false,
            "in": "query",
            "description": "Flag for displaying the HATEOS links of linked ressources.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "displayNulls",
            "required": false,
            "in": "query",
            "description": "Flag for displaying all fields even if the value is null.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PointOfPresences"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OrangeDeveloper": [
              "b2b:network",
              "b2b:network:readOnly"
            ]
          }
        ]
      }
    },
    "/status": {
      "get": {
        "operationId": "GetStatus",
        "summary": "Get API Status",
        "description": "This method returns the status of the API.",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "tags": [
          "Miscellaneous"
        ]
      }
    },
    "/version": {
      "get": {
        "operationId": "GetVersion",
        "summary": "Get API Version",
        "description": "This method returns the detailed version of the API",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Miscellaneous"
        ]
      }
    },
    "/doc": {
      "get": {
        "operationId": "DownloadSwagger",
        "summary": "Download Swagger File",
        "description": "This method provides the swagger for Network for Business API",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Size of the Swagger File in octets."
                },
                "description": "Size of the Swagger File in octets."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDocumentation"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Miscellaneous"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.orange.com/network/b2b/v2",
      "description": "Orange Developer"
    },
    {
      "url": "https://api.orange.com/network/b2b/preview/v2",
      "description": "Orange Developer Preview"
    }
  ],
  "components": {
    "schemas": {
      "InterfaceStatus": {
        "type": "string",
        "description": "Status of the Interface.",
        "enum": [
          "UP",
          "DOWN",
          "UNKNOWN",
          "DEGRADED",
          "DISABLED"
        ]
      },
      "LocationType": {
        "type": "string",
        "description": "List of type of location for example if it is a shop or a factory.",
        "enum": [
          "SHOP",
          "AIRPORT",
          "OTHER",
          "DATACENTER",
          "AGENCY",
          "FACTORY",
          "BRANCH",
          "WAREHOUSE",
          "POINT_OF_SALES",
          "UNKNOWN"
        ]
      },
      "DeviceTopologyRole": {
        "description": "Role of the device in the topology. For example, if the mode is DUAL_BACK, the router can be main device some PRIMARY. If the device is a backup of the main device, the value will be SECONDARY. Values depend of the offer, please consult the documentation of the service.",
        "type": "string",
        "enum": [
          "PRIMARY",
          "SECONDARY",
          "SINGLE",
          "UNKNOWN"
        ]
      },
      "InterfaceType": {
        "description": "Type of the Interface",
        "type": "string",
        "enum": [
          "GIGABIT_ETHERNET"
        ]
      },
      "APIStatuses": {
        "type": "string",
        "description": "Status of the API.",
        "enum": [
          "ok",
          "ko"
        ]
      },
      "HTTPMethod": {
        "description": "List of HTTP methods.",
        "type": "string",
        "enum": [
          "GET",
          "PATCH",
          "POST",
          "DELETE"
        ]
      },
      "DeviceFields": {
        "description": "List of fields for a partial reponse.",
        "type": "string",
        "enum": [
          "id",
          "name",
          "customerReference",
          "type",
          "status",
          "customer",
          "customer.id",
          "customer.name",
          "customer.segment",
          "hardware",
          "hardware.manufacturer",
          "hardware.model",
          "hardware.family",
          "hardware.cpuType",
          "order",
          "order.state",
          "location",
          "location.id",
          "location.name",
          "location.customerReference",
          "location.localCompany",
          "location.address",
          "location.address.street",
          "location.address.extendedStreet",
          "location.address.postalCode",
          "location.address.city",
          "location.address.state",
          "location.geoCoding",
          "location.geoCoding.longitude",
          "location.geoCoding.latitude",
          "offer",
          "offer.id",
          "offer.name",
          "offer.family",
          "health",
          "health.status",
          "topology",
          "topology.role",
          "topology.isCascaded",
          "ownedBy",
          "ownedBy.id",
          "ownedBy.name",
          "managedBy",
          "managedBy.id",
          "managedBy.name",
          "supportedBy",
          "supportedBy.id",
          "supportedBy.name",
          "settings",
          "settings.function",
          "createdAt",
          "updatedAt",
          "installation",
          "installation.room",
          "installation.stair",
          "installation.floor",
          "hardware.serialNumber",
          "hardware.memorySize",
          "hardware.networkPortCount",
          "firmware.name",
          "firmware.version",
          "firmware.featureSets",
          "community.id",
          "community.name",
          "location.building",
          "location.address.locality",
          "location.formattedAddress",
          "health.memoryUsage",
          "health.cpuUsage",
          "health.sdwanEdgeconnectivity",
          "health.sdwanOrchestratorReachability",
          "health.sdwanTunnelsConnectivity",
          "health.sdwanHardwareStatus",
          "health.sdwanBfdSessionUpCount",
          "health.sdwanBfdSessionDownCount",
          "topology.layer",
          "topology.sdwanOverlaySiteName",
          "topology.sdwanOverlaySiteType",
          "topology.mplsUnderlaySiteName",
          "topology.mplsUnderlaySiteType",
          "topology.sdwanZone",
          "topology.sdwanGateways",
          "topology.isHub",
          "settings.hostname",
          "settings.sdwanControlConnections",
          "community",
          "servicePoint.id",
          "servicePoint.name",
          "servicePoint.customerReference"
        ]
      },
      "DeviceSort": {
        "description": "List of fields for sorting a reponse.",
        "type": "string",
        "enum": [
          "id",
          "-id",
          "name",
          "-name",
          "createdAt",
          "-createdAt",
          "updatedAt",
          "-updatedAt",
          "model",
          "-model"
        ]
      },
      "LocationFields": {
        "description": "List of Location attributes",
        "type": "string",
        "enum": [
          "id",
          "name",
          "customerReference",
          "address",
          "address.street",
          "address.extendedStreet",
          "address.city",
          "address.country",
          "address.postalCode",
          "createdAt",
          "updatedAt",
          "address.state",
          "address.locality",
          "primaryContact",
          "primaryContact.name",
          "primaryContact.firstName",
          "primaryContact.lastName",
          "primaryContact.phone",
          "primaryContact.mobile",
          "primaryContact.email",
          "secondaryContact",
          "secondaryContact.name",
          "secondaryContact.firstName",
          "secondaryContact.lastName",
          "secondaryContact.phone",
          "secondaryContact.email",
          "secondaryContact.mobile",
          "type",
          "openingHours",
          "geocoding",
          "geocoding.latitude",
          "geocoding.longitude",
          "localCompany",
          "timeZone",
          "timeZone.name",
          "timeZone.gmt",
          "timeZone.offset",
          "residence"
        ]
      },
      "LocationSort": {
        "description": "List of fields for sorting the reponse.",
        "type": "string",
        "enum": [
          "id",
          "-id",
          "name",
          "-name",
          "createdAt",
          "-createdAt",
          "updatedAt",
          "-updatedAt",
          "localCompany",
          "-locationCompany",
          "address.city",
          "-address.city",
          "address.country",
          "-address.country"
        ]
      },
      "OfferFamily": {
        "description": "List of type of families.",
        "type": "string",
        "enum": [
          "NETWORK",
          "OTHER",
          "CLOUD",
          "VOICE",
          "SECURITY"
        ]
      },
      "AccessLineRole": {
        "description": "List of Roles available for an Access Line..",
        "type": "string",
        "enum": [
          "SINGLE",
          "PRIMARY",
          "SECONDARY",
          "UNKNOWN",
          "QUICKSTART"
        ]
      },
      "AccessLineType": {
        "type": "string",
        "description": "List of possible values of Access Line Type.",
        "enum": [
          "LEASED",
          "PSTN",
          "IHW",
          "ISDN",
          "POTS",
          "ETHERNET",
          "PSPDN",
          "AB",
          "CR",
          "QS",
          "VMI",
          "MOBILE",
          "DSL",
          "OPTIC_FIBER",
          "OTHER"
        ]
      },
      "AccessLineFields": {
        "description": "List of fields for a partial reponse.",
        "type": "string",
        "enum": [
          "id",
          "name",
          "customerReference",
          "carrierReference",
          "carrierSecondaryReference",
          "type",
          "state",
          "customer.id",
          "customer.name",
          "carrier.id",
          "carrier.name",
          "servicePoint.id",
          "servicePoint.name",
          "servicePoint.customerReference",
          "location.id",
          "location.name",
          "location.customerReference",
          "offer.id",
          "offer.name",
          "offer.family",
          "device.id",
          "device.name",
          "device.customerReference",
          "device.interface.id",
          "device.interface.name",
          "device.interface.reference",
          "device.interface.type",
          "keyDates.activatedAt",
          "keyDates.startedAt",
          "keyDates.billingStartedAt",
          "keyDates.billingStopped",
          "keyDates.terminatedAt",
          "properties.role",
          "properties.isInternet",
          "properties.isQuickStart",
          "properties.bandwidth.rx",
          "properties.bandwidth.tx",
          "properties.reference",
          "properties.dsl.phonenumber",
          "properties.dsl.vci",
          "properties.dsl.vpi",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccessLineSort": {
        "description": "List of fields for sorting the reponse.",
        "type": "string",
        "enum": [
          "id",
          "-id",
          "name",
          "-name",
          "customerReference",
          "-customerReference",
          "carrierReference",
          "-carrierReference",
          "carrierSecondaryReference",
          "-carrierSecondaryReference",
          "type",
          "-type",
          "state",
          "-state",
          "customer.id",
          "-customer.id",
          "customer.name",
          "-customer.name",
          "carrier.id",
          "-carrier.id",
          "carrier.name",
          "-carrier.name",
          "servicePoint.id",
          "-servicePoint.id",
          "servicePoint.name",
          "-servicePoint.name",
          "servicePoint.customerReference",
          "-servicePoint.customerReference",
          "location.id",
          "-location.id",
          "location.name",
          "-location.name",
          "location.customerReference",
          "-location.customerReference",
          "offer.id",
          "-offer.id",
          "offer.name",
          "-offer.name",
          "offer.family",
          "-offer.family",
          "device.id",
          "-device.id",
          "device.name",
          "-device.name",
          "device.customerReference",
          "-device.customerReference",
          "device.interface.id",
          "-device.interface.id",
          "device.interface.name",
          "-device.interface.name",
          "device.interface.reference",
          "-device.interface.reference",
          "device.interface.type",
          "-device.interface.type",
          "keyDates.activatedAt",
          "-keyDates.activatedAt",
          "keyDates.startedAt",
          "-keyDates.startedAt",
          "keyDates.billingStartedAt",
          "-keyDates.billingStartedAt",
          "keyDates.billingStopped",
          "-keyDates.billingStopped",
          "keyDates.terminatedAt",
          "-keyDates.terminatedAt",
          "properties.role",
          "-properties.role",
          "properties.isInternet",
          "-properties.isInternet",
          "properties.isQuickStart",
          "-properties.isQuickStart",
          "properties.bandwidth.rx",
          "-properties.bandwidth.rx",
          "properties.bandwidth.tx",
          "-properties.bandwidth.tx",
          "properties.reference",
          "-properties.reference",
          "properties.dsl.phonenumber",
          "-properties.dsl.phonenumber",
          "properties.dsl.vci",
          "-properties.dsl.vci",
          "properties.dsl.vpi",
          "-properties.dsl.vpi",
          "createdAt",
          "updatedAt"
        ]
      },
      "ServicePointFields": {
        "description": "List of fields for a partial reponse.",
        "type": "string",
        "enum": [
          "id",
          "name",
          "customerReference",
          "customer",
          "customer.id",
          "customer.name",
          "location",
          "location.id",
          "location.name",
          "location.customerReference",
          "createdAt",
          "updatedAt",
          "type",
          "offer",
          "offer.id",
          "offer.name",
          "offer.family",
          "orderedAt",
          "billingStartedAt",
          "billingEndedAt",
          "startedAt",
          "stoppedAt",
          "billingAccount.id",
          "billingAccount.name",
          "agreement.id",
          "agreement.name",
          "accessLines",
          "devices"
        ]
      },
      "ServicePointSort": {
        "description": "List of fields for sorting a reponse.",
        "type": "string",
        "enum": [
          "id",
          "-id",
          "name",
          "-name",
          "customerReference",
          "-customerReference",
          "createdAt",
          "-createdAt",
          "updatedAt",
          "-updatedAt",
          "customer.id",
          "-customer.id",
          "customer.name",
          "-customer.name",
          "offer.id",
          "-offer.id",
          "offer.name",
          "-offer.name",
          "location.id",
          "-location.id",
          "location.name",
          "location.customerReference",
          "-location.customerReference",
          "agreement.id",
          "-agreement.id",
          "billingAccount.id",
          "-billingAccount.id",
          "orderedAt",
          "-orderedAt",
          "billingStartedAt",
          "-billingStartedAt",
          "billingEndedAt",
          "-billingEndedAt",
          "startedAt",
          "-startedAt",
          "endedAt",
          "-endedAt",
          "state",
          "-state"
        ]
      },
      "PointOfPresenceFields": {
        "description": "List of fields for a partial reponse.",
        "type": "string",
        "enum": [
          "id",
          "name",
          "location.city",
          "location.country",
          "createdAt",
          "updatedAt"
        ]
      },
      "PointOfPresenceSort": {
        "description": "List of fields for sorting a reponse.",
        "type": "string",
        "enum": [
          "id",
          "-id",
          "name",
          "-name",
          "createdAt",
          "-createdAt",
          "updatedAt",
          "-updatedAt",
          "location.city",
          "-location.city",
          "location.country",
          "-location.country"
        ]
      },
      "AccessLineState": {
        "description": "Provisionning State of the Access Line",
        "type": "string",
        "enum": [
          "NEW",
          "INSTALLING",
          "OPERATIONAL",
          "TERMINATED",
          "CANCELLED",
          "UNKNOWN"
        ]
      },
      "DeviceIncludes": {
        "type": "string",
        "description": "List of Nested resource to add in the response.",
        "enum": [
          "interfaces"
        ]
      },
      "DeviceTopologyLayer": {
        "description": "Layer where the device is operating.",
        "type": "string",
        "enum": [
          "MPLS",
          "SDWAN",
          "LAN",
          "UNKNOWN",
          "OTHER"
        ]
      },
      "DeviceTopologyMode": {
        "description": "Mode of the topology. The mode depends of the offer associated to the device.",
        "type": "string",
        "enum": [
          "STANDALONE",
          "DUAL_BACKUP",
          "LOAD_BALANCING",
          "OTHER",
          "UNKNOWN"
        ]
      },
      "ServicePointIncludes": {
        "type": "string",
        "description": "List of Nested resources to include in the response.",
        "enum": [
          "accessLines",
          "devices"
        ]
      },
      "DeviceType": {
        "type": "string",
        "description": "Type of the device for example for WAN service routers are deployed and the value for such device will be ROUTER.",
        "enum": [
          "WAN_DEVICE",
          "ROUTER",
          "SWITCH",
          "ACCESS_POINT",
          "WIRELESS_ACCESS_POINT",
          "INTERNETGATEWAY",
          "WAN_ACCELERATOR",
          "DDR",
          "UCPE",
          "HUB",
          "WAN_EDGE"
        ]
      },
      "DeviceCategory": {
        "type": "string",
        "description": "Category of the Device",
        "enum": [
          "WAN_DEVICE",
          "LAN_DEVICE",
          "OTHER",
          "UNKNOWN"
        ]
      },
      "DeviceSettingsFunctions": {
        "type": "string",
        "description": "Main function of the Device.",
        "enum": [
          "WAN_ROUTER",
          "LAN_SWITCH",
          "SWITCH",
          "HUB",
          "FIREWALL",
          "CAS",
          "GATEWAY",
          "VSMART",
          "VBOND",
          "WAN_EDGE"
        ]
      },
      "ServicePointState": {
        "type": "string",
        "description": "Provisioning State of the Service Point.",
        "enum": [
          "OPERATIONAL",
          "INSTALLING",
          "TERMINATED",
          "UNKNOWN"
        ]
      },
      "DeviceState": {
        "type": "string",
        "enum": [
          "OPERATIONAL",
          "INSTALLING",
          "TERMINATED",
          "UNKNOWN"
        ],
        "description": "Provisioning state of the device. **INSTALLING** when Orange is deploying the device, **OPERATIONAL** when the router is deployed and **TERMINATED** when the device is decommisionned."
      },
      "ActionInProgress": {
        "type": "string",
        "description": "Information the current action planned or in progress.",
        "enum": [
          "NONE",
          "CEASING",
          "INSTALLING"
        ]
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "description": "Information on the Error.",
        "type": "object",
        "properties": {
          "code": {
            "description": "Code of the error",
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "description": "Title of the error",
            "type": "string"
          },
          "description": {
            "description": "Description of the error",
            "type": "string"
          },
          "infoURL": {
            "description": "URL for additional information on the error.",
            "type": "string"
          }
        }
      },
      "LocationAddress": {
        "description": "Address information of the site",
        "required": [
          "street",
          "city",
          "country"
        ],
        "type": "object",
        "properties": {
          "street": {
            "description": "Street of the site",
            "type": "string"
          },
          "extendedStreet": {
            "description": "Additional street information of the site",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal code of the site",
            "type": "string"
          },
          "state": {
            "description": "State where the site is located. Only for US",
            "type": "string"
          },
          "locality": {
            "description": "Locality of the site.",
            "type": "string"
          },
          "city": {
            "description": "City of the site.",
            "type": "string"
          },
          "country": {
            "description": "The country code of the location. The code follow the [ISO-3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1) specifications.",
            "type": "string"
          }
        }
      },
      "Customer": {
        "description": "Customer account information",
        "type": "object",
        "properties": {
          "id": {
            "description": "Orange Single identifier of the Customer (~customer code).",
            "type": "string"
          },
          "name": {
            "description": "Name of the Customer.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Device": {
        "description": "Device information.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Orange Single identifier of the device.",
            "type": "string"
          },
          "name": {
            "description": "Orange Name of the device defined by Orange Business Services. Example BVPN SMOW2542.",
            "type": "string"
          },
          "customerReference": {
            "description": "Reference (or name) of the device assigned by the Customer. Example BVPN: CRUMOS002CA901.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "category": {
            "$ref": "#/components/schemas/DeviceCategory"
          },
          "isVirtual": {
            "description": "Flag indicating if the device is virtual. when the value is true, the device is virtual (vEdge cloud for example), if the value is false, it is a physical device.",
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/DeviceState"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "location": {
            "$ref": "#/components/schemas/LocationEmbedded"
          },
          "community": {
            "description": "Community name (VPN) of the device.",
            "type": "string"
          },
          "servicePoint": {
            "$ref": "#/components/schemas/DeviceServicePoint"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "topology": {
            "$ref": "#/components/schemas/DeviceTopology"
          },
          "settings": {
            "$ref": "#/components/schemas/DeviceSettings"
          },
          "hardware": {
            "$ref": "#/components/schemas/DeviceHardware"
          },
          "firmware": {
            "$ref": "#/components/schemas/DeviceFirmware"
          },
          "ownedBy": {
            "$ref": "#/components/schemas/Owner"
          },
          "managedBy": {
            "$ref": "#/components/schemas/Manager"
          },
          "supportedBy": {
            "$ref": "#/components/schemas/Support"
          },
          "stackedBy": {
            "$ref": "#/components/schemas/DeviceShort"
          },
          "hostedBy": {
            "$ref": "#/components/schemas/DeviceShort"
          },
          "serviceLevelManagement": {
            "$ref": "#/components/schemas/ServiceLevelManagement"
          },
          "inHouseLocation": {
            "$ref": "#/components/schemas/DeviceInHouse"
          },
          "keyDates": {
            "type": "object",
            "description": "Information on Key Dates",
            "properties": {
              "installedAt": {
                "type": "string",
                "description": "Date when the device has been installed.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_",
                "format": "date"
              },
              "startedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the device has been declared ready for service.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_."
              },
              "billingStartedAt": {
                "type": "string",
                "description": "Date when the billing of this device started after a disconnection for example.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_.",
                "format": "date"
              },
              "billingEndedAt": {
                "type": "string",
                "description": "Date when the billing was stopped after a disconnection request for example. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_.",
                "format": "date"
              },
              "discoveredAt": {
                "type": "string",
                "description": "Date when the device was reached by Orange probes.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_.",
                "format": "date"
              },
              "terminatedAt": {
                "type": "string",
                "description": "Date when the device has been removed from the service. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09_.",
                "format": "date"
              }
            }
          },
          "createdAt": {
            "description": "Date when the device record was created in the API. There is no Business meaning. This field facilitates the data synchronisation. There is no business meaning, helps only for synchronisation of data.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "description": "Date when the record was updated in the API. There is no Business meaning. This field facilitates the data synchronisation. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_.",
            "type": "string",
            "format": "date-time"
          },
          "_links": {
            "$ref": "#/components/schemas/DeviceLinks"
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceInterface"
            }
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "state",
          "customer",
          "hardware",
          "ownedBy",
          "managedBy",
          "supportedBy",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeviceInterface": {
        "description": "Model description of a Device Interface",
        "required": [
          "id",
          "name",
          "type",
          "isLogical",
          "bandwidth",
          "cos",
          "physicalInterface"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Single identifier of the interface composed of the device name and the interface?",
            "type": "string"
          },
          "name": {
            "description": "User friendly name of the interface",
            "type": "string"
          },
          "usage": {
            "description": "Type of usage of the Interface. For example WAN or LAN, etc..",
            "type": "string"
          },
          "description": {
            "description": "Description available in the configuration for this Interface",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/InterfaceType"
          },
          "protocol": {
            "description": "Protocol configured on the Interface",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/InterfaceStatus"
          },
          "isActive": {
            "description": "Flag indicating if the Interface is active in the configuration of the device",
            "type": "string"
          },
          "isLogical": {
            "description": "Flags indicating if the interface is logical",
            "type": "boolean"
          },
          "mode": {
            "description": "Mode of the Interface",
            "type": "string"
          },
          "adapter": {
            "description": "Number of the adapter",
            "type": "integer",
            "format": "int32"
          },
          "port": {
            "description": "Number of the port of the interface",
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "description": "Number of the slot of the interface",
            "type": "integer",
            "format": "int32"
          },
          "mtu": {
            "description": "configured  MTU on the interface",
            "type": "string"
          },
          "vrf": {
            "description": "Name of the VRF configured for the interface",
            "type": "string"
          },
          "vlan": {
            "description": "VALN id defined on the Interface",
            "type": "string"
          },
          "hardwareAddress": {
            "description": "MAC address of the interface",
            "type": "string"
          },
          "bandwidth": {
            "description": "Service bandwidth configured",
            "type": "string"
          },
          "seenAt": {
            "description": "Date of the last",
            "type": "string",
            "format": "date-time"
          },
          "health": {
            "$ref": "#/components/schemas/DeviceInterfaceHealth"
          },
          "ipAddressing": {
            "$ref": "#/components/schemas/DeviceInterfaceIpAddressing"
          },
          "cos": {
            "$ref": "#/components/schemas/DeviceCos"
          },
          "physicalInterface": {
            "$ref": "#/components/schemas/DeviceInterfaceShort"
          },
          "_links": {
            "$ref": "#/components/schemas/InterfaceLinks"
          }
        }
      },
      "DeviceTopology": {
        "type": "object",
        "title": "",
        "description": "Information on the Topology",
        "properties": {
          "isCascaded": {
            "type": "boolean",
            "default": false,
            "description": "Flag indicating if the device is behind another WAN device (cascaded). If the value is true, the device is cascaded."
          },
          "layer": {
            "$ref": "#/components/schemas/DeviceTopologyLayer"
          },
          "mode": {
            "$ref": "#/components/schemas/DeviceTopologyMode"
          },
          "role": {
            "$ref": "#/components/schemas/DeviceTopologyRole"
          }
        },
        "required": [
          "layer",
          "mode",
          "role"
        ]
      },
      "DeviceLinks": {
        "description": "Model listing all links available on a Device Model",
        "type": "object",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/HyperlinkDeviceSelf"
          },
          "interfaces": {
            "$ref": "#/components/schemas/HyperlinkDeviceInterfaces"
          }
        }
      },
      "LocationEmbedded": {
        "description": "Location representing a physical address",
        "type": "object",
        "properties": {
          "id": {
            "description": "Single Identifier of the location",
            "type": "string"
          },
          "name": {
            "description": "Name of the location",
            "type": "string"
          },
          "localCompany": {
            "type": "string",
            "description": "Name of the company in the premises\n"
          },
          "customerReference": {
            "description": "External Reference of the location. This reference is set by Customer.",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/LocationAddress"
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "geoCoding": {
            "$ref": "#/components/schemas/GeoCoding"
          },
          "building": {
            "type": "string",
            "description": "Name of the building"
          },
          "comment": {
            "type": "string",
            "description": "Comment on the location"
          },
          "formattedAddress": {
            "type": "string",
            "description": "Complete formatted address of the location"
          },
          "primaryContact": {
            "$ref": "#/components/schemas/PrimaryIndividual"
          },
          "secondaryContact": {
            "$ref": "#/components/schemas/SecondaryIndividual"
          }
        },
        "required": [
          "address"
        ]
      },
      "DeviceShort": {
        "description": "Information on the Device.",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Device."
          },
          "name": {
            "type": "string",
            "description": "Name of the Device."
          },
          "customerReference": {
            "type": "string",
            "description": "Customer Reference of the Device."
          }
        }
      },
      "DeviceInterfaceShort": {
        "description": "Information on the physical interface for logical interface.",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Interface."
          },
          "name": {
            "type": "string",
            "description": "Name of the Interface."
          }
        }
      },
      "GeoCoding": {
        "description": "GPS information of the location",
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "description": "Latitude of the location.",
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "description": "Longitudeof the location.",
            "type": "number",
            "format": "float"
          }
        }
      },
      "Offer": {
        "type": "object",
        "description": "Information on the Offer",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of an Offer"
          },
          "name": {
            "type": "string",
            "description": "Name of the main Offer associatzed to the device"
          },
          "family": {
            "$ref": "#/components/schemas/OfferFamily"
          }
        },
        "required": [
          "id",
          "name",
          "family"
        ]
      },
      "Version": {
        "description": "Information on the API Version",
        "required": [
          "version",
          "deprecated"
        ],
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/VersionStruct"
          },
          "deprecated": {
            "description": "Flag indicating that API is deprecated",
            "type": "boolean"
          }
        }
      },
      "VersionStruct": {
        "description": "Information on the Version",
        "required": [
          "major",
          "minor",
          "patch"
        ],
        "type": "object",
        "properties": {
          "major": {
            "description": "Major number of the API",
            "type": "string"
          },
          "minor": {
            "description": "Minor number of the API",
            "type": "string"
          },
          "patch": {
            "description": "Patch number of the API",
            "type": "string"
          }
        }
      },
      "Status": {
        "description": "Information on the status of the API.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the current API.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatuses"
          },
          "version": {
            "description": "API version (major dot minor dot patch numbers).",
            "type": "string"
          }
        },
        "required": [
          "name",
          "status",
          "version"
        ]
      },
      "DeviceFirmware": {
        "type": "object",
        "description": "Information on the Device eFirmware.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Firmware"
          },
          "version": {
            "description": "Version of the firrmware",
            "type": "string"
          },
          "featureSets": {
            "type": "string",
            "description": "List of features"
          }
        }
      },
      "DeviceHardware": {
        "type": "object",
        "description": "Information on the Device Hardware.",
        "properties": {
          "manufacturer": {
            "description": "Manufacturer of the device",
            "type": "string"
          },
          "model": {
            "description": "Model of the device",
            "type": "string"
          },
          "family": {
            "description": "Family,Product line of the device",
            "type": "string"
          },
          "memorySize": {
            "description": "Size of the installed memory in the device. Value in kOctets",
            "type": "integer",
            "format": "int32"
          },
          "cpuType": {
            "description": "CPU type of the device provided by the Manufacturer.",
            "type": "string"
          },
          "cpuReference": {
            "description": "CPU reference of the device provided by the Manufacturer.",
            "type": "string"
          },
          "cpuCount": {
            "description": "Indicate the number of cpu installed in the Device",
            "type": "integer",
            "format": "int32"
          },
          "cpuSpeed": {
            "description": "Indicate the speed of the Processor of the Device in Ghz",
            "type": "string"
          },
          "diskSize": {
            "description": "Indicate the size of the disk in kOctets",
            "type": "integer",
            "format": "int32"
          },
          "networkPortCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of port on the device."
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial Number of the device"
          },
          "chassis": {
            "type": "string",
            "description": "Chassis name of the device"
          }
        }
      },
      "DeviceSettings": {
        "type": "object",
        "description": "Information on the Device Settings",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/DeviceSettingsFunctions"
          },
          "hostname": {
            "type": "string",
            "description": "hostname defined in the device configuration"
          },
          "countControlConnections": {
            "type": "integer",
            "format": "int32",
            "description": "Number of connections for a SDWAN device"
          }
        }
      },
      "Hyperlink": {
        "description": "Link on the resource.",
        "required": [
          "href"
        ],
        "type": "object",
        "properties": {
          "href": {
            "description": "URI of the resource",
            "type": "string"
          },
          "method": {
            "$ref": "#/components/schemas/HTTPMethod"
          },
          "payload": {
            "description": "Body for POST or PATCH methods",
            "type": "string"
          }
        }
      },
      "PrimaryIndividual": {
        "type": "object",
        "description": "Information on the Primary Contact.",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the Primary Contact. For example: _M._"
          },
          "name": {
            "type": "string",
            "description": "Full Name of the Primary Contact."
          },
          "firstName": {
            "type": "string",
            "description": "First Name of the Primary Contact."
          },
          "lastName": {
            "type": "string",
            "description": "Last Name of the Primary Contact."
          },
          "phone": {
            "type": "string",
            "description": "Phone Number of the Primary Contact."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Number of the Primary Contact."
          },
          "email": {
            "type": "string",
            "description": "Email of the Primary Contact."
          },
          "roles": {
            "type": "array",
            "description": "Roles of the Primary Contact.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "SecondaryIndividual": {
        "type": "object",
        "description": "Information on the individual.",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the Secondary Contact. For example: _M._"
          },
          "name": {
            "type": "string",
            "description": "Full Name of the Secondary Contact."
          },
          "firstName": {
            "type": "string",
            "description": "First Name of the Secondary Contact."
          },
          "lastName": {
            "type": "string",
            "description": "Last Name of the Secondary Contact."
          },
          "phone": {
            "type": "string",
            "description": "Phone Number of the Secondary Contact."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Number of the Secondary Contact."
          },
          "email": {
            "type": "string",
            "description": "Email of the Secondary Contact."
          },
          "roles": {
            "type": "array",
            "description": "Roles of the Secondary Contact.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "TimeZone": {
        "description": "Information on the TimeZone.",
        "required": [
          "code",
          "name",
          "offset",
          "gmt"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Single Identifier of the Timezone."
          },
          "name": {
            "type": "string",
            "description": "Name of the Timezone."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offet of the Timezone."
          },
          "gmt": {
            "type": "string",
            "description": "Code of the Timezone."
          }
        }
      },
      "Owner": {
        "description": "Entity own the device.",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Single Identifier of the Entity.",
            "type": "string"
          },
          "name": {
            "description": "Name of the Entity.",
            "type": "string"
          }
        }
      },
      "Manager": {
        "description": "Entity in change of the Management of the device.",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Single Identifier of the Entity.",
            "type": "string"
          },
          "name": {
            "description": "Name of the Entity.",
            "type": "string"
          }
        }
      },
      "Support": {
        "description": "Entity in charge of the Support of the device.",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Single Identifier of the Entity.",
            "type": "string"
          },
          "name": {
            "description": "Name of the Entity.",
            "type": "string"
          }
        }
      },
      "DeviceInterfaceIpAddressing": {
        "type": "object",
        "description": "Information on address.",
        "properties": {
          "ipV4": {
            "description": "IP address in v4 format",
            "type": "string"
          },
          "maskV4": {
            "description": "IP mask of the subnet in v6 format",
            "type": "string"
          },
          "maskLengthV4": {
            "description": "IP Variable Length Subnet Mask in v4 format",
            "type": "string"
          },
          "ipV6": {
            "description": "IP address in v6 format",
            "type": "string"
          },
          "maskV6": {
            "description": "IP mask of the subnet in v6 format",
            "type": "string"
          }
        }
      },
      "HyperlinkDeviceSelf": {
        "description": "URI on the Device.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Hyperlink"
          },
          {
            "type": "object"
          }
        ]
      },
      "HyperlinkDeviceInterfaces": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Hyperlink"
          },
          {
            "type": "object"
          }
        ],
        "description": "URI on the Device Interface."
      },
      "Location": {
        "required": [
          "address",
          "customer",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Single Identifier of the location",
            "type": "string"
          },
          "name": {
            "description": "Name of the location",
            "type": "string"
          },
          "customerReference": {
            "description": "External Reference of the location. This reference is set by Customer.",
            "type": "string"
          },
          "localCompany": {
            "type": "string",
            "description": "Name of the Local Company."
          },
          "formattedAddress": {
            "type": "string",
            "description": "Complete address including street, city and Country."
          },
          "building": {
            "type": "string",
            "description": "Name of the building"
          },
          "address": {
            "$ref": "#/components/schemas/LocationAddress"
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "geoCoding": {
            "$ref": "#/components/schemas/GeoCoding"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "primaryContact": {
            "$ref": "#/components/schemas/PrimaryIndividual"
          },
          "secondaryContact": {
            "$ref": "#/components/schemas/SecondaryIndividual"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "comment": {
            "description": "Comment on the location",
            "type": "string"
          },
          "complementary": {
            "$ref": "#/components/schemas/ComplementaryAddress"
          },
          "createdAt": {
            "description": "Date when the device record was created in the API. There is no Business meaning. This field facilitates the data synchronisation. There is no business meaning, helps only for synchronisation of data.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "description": "Date when the record was updated. There is no Business meaning. This field facilitates the data synchronisation. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "type": "string",
            "format": "date-time"
          },
          "_links": {
            "$ref": "#/components/schemas/HyperlinkLocation"
          }
        },
        "description": "Information on the Location."
      },
      "HyperlinkLocation": {
        "required": [
          "self",
          "devices",
          "servicePoints",
          "accessLines"
        ],
        "type": "object",
        "description": "HATEOS links on the nested resources.",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "devices": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "servicePoints": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "accessLines": {
            "$ref": "#/components/schemas/Hyperlink"
          }
        }
      },
      "AccessLine": {
        "type": "object",
        "description": "Information on an Access Line (or Circuit)",
        "properties": {
          "id": {
            "description": "Orange Single identifier of the Access Line.",
            "type": "string"
          },
          "name": {
            "description": "Name of the Access Line",
            "type": "string"
          },
          "customerReference": {
            "type": "string",
            "description": "Reference set by the Customer on the Access Line."
          },
          "carrierReference": {
            "description": "Reference of the Access Line provided by the Carrier.",
            "type": "string"
          },
          "carrierSecondaryReference": {
            "description": "Alternate reference of the Access Line provided by  the Carrier.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AccessLineType"
          },
          "state": {
            "$ref": "#/components/schemas/AccessLineState"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "carrier": {
            "$ref": "#/components/schemas/Carrier"
          },
          "servicePoint": {
            "$ref": "#/components/schemas/AccessLineServicePoint"
          },
          "location": {
            "$ref": "#/components/schemas/LocationEmbedded"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "device": {
            "$ref": "#/components/schemas/AccessLineDevice"
          },
          "keyDates": {
            "type": "object",
            "description": "Information on the Key dates.",
            "properties": {
              "activatedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the Access Line has been activated. The format of the date use the [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).",
                "example": "2021-01-01"
              },
              "startedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the service on the Access Line started. The format of the date use the [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).",
                "example": "2021-01-01"
              },
              "billingStartedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the billing of the Access Line started. The format of the date use the [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).",
                "example": "2021-01-01"
              },
              "billingStoppedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the billing of the Access Line was stopped after a disconnection request. The format of the date use the [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).",
                "example": "2021-01-01"
              },
              "terminatedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the Access Line has been disconnected from the network. The format of the date use the [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).",
                "example": "2021-01-01"
              },
              "orderedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the Access Line was ordered. The format of the date use the [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).",
                "example": "2021-01-01"
              }
            }
          },
          "properties": {
            "$ref": "#/components/schemas/AccessLineProperties"
          },
          "createdAt": {
            "type": "string",
            "description": "Date when the device record was created in the API. There is no Business meaning. This field facilitates the data synchronisation. There is no business meaning, helps only for synchronisation of data.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "format": "date-time",
            "example": "2021-01-01T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date when the record was updated. There is no Business meaning. This field facilitates the data synchronisation. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "format": "date-time",
            "example": "2021-01-01T12:00:00Z"
          },
          "_links": {
            "$ref": "#/components/schemas/AccessLineLinks"
          }
        },
        "required": [
          "id",
          "name",
          "keyDates",
          "properties",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccessLineLinks": {
        "required": [
          "self",
          "location"
        ],
        "description": "HATEOS links on nested resources.",
        "type": "object",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "servicePoint": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "pointOfPresence": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "location": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "device": {
            "$ref": "#/components/schemas/Hyperlink"
          }
        }
      },
      "Carrier": {
        "type": "object",
        "description": "Information on the Carrier providing the Access Line",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of a Carrier"
          },
          "name": {
            "type": "string",
            "description": "Name of the Carrier."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AccessLineDevice": {
        "type": "object",
        "description": "Information on the device using this Access Line.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Indentifier of the device"
          },
          "name": {
            "type": "string",
            "description": "Orange Name of the device"
          },
          "customerReference": {
            "type": "string",
            "description": "Reference of the device set by the Customer"
          },
          "interface": {
            "$ref": "#/components/schemas/DeviceInterfaceLight"
          }
        },
        "required": [
          "name"
        ]
      },
      "DeviceInterfaceLight": {
        "type": "object",
        "description": "Information on the device attached to the Access Line.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the device interface where the access line is connected."
          },
          "name": {
            "type": "string",
            "description": "Name of the Interface"
          },
          "type": {
            "type": "string",
            "description": "Type of the Interface"
          }
        },
        "required": [
          "name"
        ]
      },
      "AccessLineProperties": {
        "description": "Information on the Access Lines",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AccessLineType"
          },
          "role": {
            "$ref": "#/components/schemas/AccessLineRole"
          },
          "isInternet": {
            "description": "Flag indicating if the line is an Internet Access Line. true= Internet, false= not Internet.",
            "type": "boolean"
          },
          "isQuickStart": {
            "description": "Flag indicating that the line is a temporary Line deployed for starting the service (often a mobile 4G access line).",
            "type": "boolean"
          },
          "connectionType": {
            "type": "string",
            "description": "Type of Connection."
          },
          "bandwidth": {
            "description": "Access bandwidth  for the Access Line  (value in kB).",
            "type": "object",
            "properties": {
              "rx": {
                "type": "string",
                "description": "Reception bandwidth. The unit is specified in the _unit_ attribute."
              },
              "tx": {
                "type": "string",
                "description": "Transmit bandwidth. The unit is specified in the _unit_ attribute."
              },
              "unit": {
                "type": "string",
                "description": "Unit of the bandwidth such as kB/s."
              }
            }
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phonenumber of the Access Line in case of DSL for example. The value can be null if not relevant for the support."
          },
          "reference": {
            "type": "string",
            "description": "Internal Reference for identying the Access Line."
          },
          "dslParameters": {
            "type": "object",
            "description": "Information on the DSL Service.",
            "properties": {
              "vci": {
                "type": "number",
                "description": "Contains the Virtual Circuit Identifier. Used for DSL Access Line."
              },
              "vpi": {
                "type": "number",
                "description": "Contains the Virtual Path Identifier. Used only for DSL Line."
              }
            }
          }
        }
      },
      "ServicePoint": {
        "type": "object",
        "description": "Information on the Service Point.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of a Service Point."
          },
          "name": {
            "type": "string",
            "description": "Name of a Service Point."
          },
          "customerReference": {
            "type": "string",
            "description": "Reference of the Service Point set by the Customer."
          },
          "state": {
            "$ref": "#/components/schemas/ServicePointState"
          },
          "requestInProgress": {
            "$ref": "#/components/schemas/ActionInProgress"
          },
          "category": {
            "type": "string",
            "description": "Category of a Service Point. This value is defined by the Customer during the Ordering process."
          },
          "criticality": {
            "type": "string",
            "description": "criticality of a Service Point. This value is defined by the Customer during the Ordering process."
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "location": {
            "$ref": "#/components/schemas/LocationShort"
          },
          "keyDates": {
            "type": "object",
            "description": "Information on Key dates.",
            "properties": {
              "orderedAt": {
                "type": "string",
                "format": "date",
                "description": "Date when the service/device has been ordered."
              },
              "startedAt": {
                "type": "string",
                "format": "date",
                "description": "*TODO*"
              },
              "billingStartedAt": {
                "type": "string",
                "format": "date",
                "description": "*TODO*"
              },
              "billingEndedAt": {
                "type": "string",
                "format": "date",
                "description": "*TODO*"
              },
              "terminatedAt": {
                "type": "string",
                "format": "date",
                "description": "*TODO*"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date when the device record was created in the API. There is no Business meaning. This field facilitates the data synchronisation. There is no business meaning, helps only for synchronisation of data.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date when the record was updated. There is no Business meaning. This field facilitates the data synchronisation. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "format": "date-time"
          },
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccount"
          },
          "agreement": {
            "$ref": "#/components/schemas/Agreement"
          },
          "properties": {
            "$ref": "#/components/schemas/ServicePointProperties"
          },
          "_links": {
            "$ref": "#/components/schemas/ServicePointLinks"
          }
        },
        "required": [
          "id",
          "name",
          "customerReference",
          "state",
          "customer",
          "location",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeviceServicePoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of the Service Point."
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Point composed of the Location name and the installed offer."
          },
          "customerReference": {
            "type": "string",
            "description": "Reference set by the Customer for the Service Point."
          }
        },
        "required": [
          "id",
          "name",
          "customerReference"
        ],
        "description": "Information on the Service Point associated to the device;"
      },
      "InterfaceLinks": {
        "description": "HATEOS links on nested resources.",
        "required": [
          "device"
        ],
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/Hyperlink"
          }
        }
      },
      "PointOfPresences": {
        "required": [
          "id",
          "name",
          "location",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "description": "Information on the Point of Presence.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Point of Presence."
          },
          "name": {
            "type": "string",
            "description": "Name of the Point of Presence."
          },
          "location": {
            "$ref": "#/components/schemas/PointOfPresenceLocation"
          },
          "createdAt": {
            "description": "Date when the device record was created in the API. There is no Business meaning. This field facilitates the data synchronisation. There is no business meaning, helps only for synchronisation of data.  The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date when the record was updated. There is no Business meaning. This field facilitates the data synchronisation. The format is [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format.\n_Example: 2015-04-09T12:07:56Z_",
            "format": "date-time"
          },
          "_links": {
            "$ref": "#/components/schemas/PointOfPresenceLinks"
          }
        }
      },
      "PointOfPresenceLocation": {
        "required": [
          "city",
          "country"
        ],
        "description": "Information on the location of the Point of Presence.",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City Name where the Point of Presence is located."
          },
          "country": {
            "type": "string",
            "description": "Country Code where the Point Of Presence is located. The code follow the [ISO-3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1) specifications."
          }
        }
      },
      "PointOfPresenceLinks": {
        "required": [
          "self",
          "device"
        ],
        "description": "HATEOS links on nested resources.",
        "type": "object",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "device": {
            "$ref": "#/components/schemas/Hyperlink"
          }
        }
      },
      "DeviceInHouse": {
        "type": "object",
        "description": "Additional information where the device is installed.",
        "properties": {
          "stair": {
            "type": "string",
            "description": "Number or letter on Stair."
          },
          "room": {
            "type": "string",
            "description": "Room Number"
          },
          "floor": {
            "type": "string",
            "description": "Number of the Floor."
          }
        }
      },
      "DeviceInterfaceHealth": {
        "required": [
          "status"
        ],
        "type": "object",
        "description": "Operational Status of the device",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/InterfaceStatus"
          }
        }
      },
      "ServiceLevelManagement": {
        "required": [
          "coverage",
          "restoreTime",
          "responseTime"
        ],
        "description": "Information on the Service Level.",
        "type": "object",
        "properties": {
          "coverage": {
            "type": "string",
            "description": "Coverage of the Service Level."
          },
          "restoreTime": {
            "type": "string",
            "description": "Response Time to restore the service."
          },
          "responseTime": {
            "type": "string",
            "description": "Response Time to fix an issue."
          }
        }
      },
      "AccessLineServicePoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Orange Single Identifier of a Service Point."
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Point."
          },
          "customerReference": {
            "type": "string",
            "description": "Customer Reference of the Service Point."
          }
        },
        "required": [
          "id",
          "name",
          "customerReference"
        ],
        "description": "Service Point of the Access Line."
      },
      "DeviceCos": {
        "required": [
          "date",
          "d1",
          "d2",
          "d3",
          "internet",
          "video",
          "voice"
        ],
        "type": "object",
        "description": "Information on the QOS.",
        "properties": {
          "data": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for data trafic."
          },
          "d1": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for data trafic of classe 1."
          },
          "d2": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for data trafic of classe 2."
          },
          "d3": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for data trafic of classe 3."
          },
          "internet": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for internet trafic."
          },
          "video": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for Video trafic."
          },
          "voice": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of bandwidth reserved for Voice trafic."
          }
        }
      },
      "ServicePointLinks": {
        "type": "object",
        "description": "HATEOS links on nested resources.",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "devices": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "accessLines": {
            "$ref": "#/components/schemas/Hyperlink"
          },
          "location": {
            "$ref": "#/components/schemas/Hyperlink"
          }
        },
        "required": [
          "self"
        ]
      },
      "LocationShort": {
        "type": "object",
        "description": "Information on the Location.",
        "properties": {
          "id": {
            "description": "Single Identifier of the location",
            "type": "string"
          },
          "name": {
            "description": "Name of the location",
            "type": "string"
          },
          "customerReference": {
            "description": "External Reference of the location. This reference is set by Customer.",
            "type": "string"
          }
        }
      },
      "Agreement": {
        "required": [
          "id"
        ],
        "type": "object",
        "description": "Information on the Agreement.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Agreement."
          },
          "name": {
            "type": "string",
            "description": "Name of the Agreement."
          }
        }
      },
      "BillingAccount": {
        "type": "object",
        "description": "Billing Account Information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Single Identifier of the Billing Account."
          },
          "name": {
            "type": "string",
            "description": "Name of the Billing Account."
          }
        },
        "required": [
          "id"
        ]
      },
      "ComplementaryAddress": {
        "type": "object",
        "description": "Additional information on the address.",
        "properties": {
          "stairs": {
            "type": "string",
            "description": "Number or letter on Stair."
          },
          "floor": {
            "type": "string",
            "description": "Number of the Floor."
          },
          "residence": {
            "type": "string",
            "description": "Residence Name."
          },
          "room": {
            "type": "string",
            "description": "Room Number"
          }
        }
      },
      "ServicePointProperties": {
        "title": "ServicePointProperties",
        "description": "Properties of the Service Point.",
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "description": "Associated Option of the Offer."
          },
          "isSccActivated": {
            "type": "string",
            "description": "Flag indicating if there is a subscription to _'Service Client Conseil'_. This service is available on the France Market."
          },
          "community": {
            "type": "object",
            "description": "Information on the Community.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Single Identifier of the Network Community."
              },
              "name": {
                "type": "string",
                "description": "Name of the Network Community."
              }
            }
          },
          "voip": {
            "type": "object",
            "description": "Information onthe Voice Over IP Service.",
            "properties": {
              "option": {
                "type": "string"
              },
              "codec": {
                "type": "string"
              },
              "managedChannelCount": {
                "type": "integer"
              },
              "unmanagedChannelCount": {
                "type": "integer"
              },
              "vpn": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "video": {
            "type": "object",
            "description": "Information on the Video Over IP Service.",
            "properties": {
              "managedChannelCount": {
                "type": "integer"
              },
              "unmanagedChannelCount": {
                "type": "number"
              }
            }
          },
          "intranet": {
            "type": "object",
            "description": "Information on the Intranet Service.",
            "properties": {
              "bandwidth": {
                "type": "string"
              }
            }
          },
          "wan": {
            "type": "object",
            "description": "Information on the WAN Service.",
            "properties": {
              "mode": {
                "type": "string"
              },
              "isInternet": {
                "type": "boolean"
              },
              "isStandard": {
                "type": "boolean"
              }
            }
          },
          "mobile": {
            "type": "object",
            "description": "Information on the Mobile Service.",
            "properties": {
              "subscription": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              }
            }
          },
          "dsl": {
            "type": "object",
            "description": "Information on the DSL Service.",
            "properties": {
              "phoneNumber": {
                "type": "string"
              }
            }
          }
        }
      },
      "NetworkDocumentation": {
        "description": "Swagger of the API.",
        "type": "object"
      }
    },
    "securitySchemes": {
      "OrangeDeveloper": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.orange.com/oauth/v3/token",
            "refreshUrl": "https://api.orange.com/oauth/v3/token",
            "scopes": {
              "b2b:network": "Allow to access and manage resources",
              "b2b:network:readOnly": "Allow to access all resources in read mode"
            }
          }
        }
      }
    }
  }
}